











  
    Archiva - 
    The Build Artifact Repository Manager
    
      @import url("./css/maven-base.css");
      @import url("./css/maven-theme.css");
      @import url("./css/site.css");
    
    
          
        
                            
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
                                
var pageTracker = _gat._getTracker("UA-140879-5");
pageTracker._initData();
pageTracker._trackPageview();
                    
  
    
                  
    
                                            
    
            
                        
    
                                    
    
            
            
        
      
    
    
          
  

  
    
  
  
            
          
          Apache
              &gt;
      
          Archiva
                
                  
  

  
    
  
  
            &nbsp;| Last Published: 22 Sep 2009
            
      
        
      
    
    
      
           
  

  
    
  
  
                   Project Documentation
        
              
                
              
      
            
      
            
      
            
      
            
      
            
      
              
        
              Project Information
              
          
                                       
            
          
                       
  

  
    
  
  
        
    
    
      
        
  
  
    
    
    
    

            $(document).ready(function(){
 $('#dialog12x').jqm();
 $('#dialog12x').jqmAddTrigger($('span.expand:eq(0)').find('a'));
 $('#dialog12x').jqmAddClose($('#dialog12x').find('span'));
 $('#dialog11x').jqm();
 $('#dialog11x').jqmAddTrigger($('span.expand:eq(1)').find('a'));
 $('#dialog11x').jqmAddClose($('#dialog11x').find('span'));
            });

    

    
      div.section {
        margin-right: 175px;
      }
    
    
      Features
      
        
          
          Project Information
        
      
      
        
          
          Artifact Search
        
      
      
        
          
          Remote Proxying Cache
        
      
      
        
          
          Artifact Upload
        
      
      
        
          
          Graphical Administration
        
      
      
        
          
          Repository Groups
        
      
      
        
          
          RSS Feeds
        
      
      
        
          
          Role-based Security
        
      
      
        
          
          Integrity Reports
        
      
      
        
          
          Maintenance
        
      
    
    Archiva: The Build Artifact Repository Manager
      
         Apache Archiva is an extensible repository management software that 
         helps taking care of your own personal or enterprise-wide build 
         artifact repository. It is the perfect companion for build tools such 
         as Maven,
         Continuum,
         and ANT. 
      
 
      
         Archiva offers several capabilities, amongst which remote repository proxying, 
         security access management, build artifact storage, delivery, browsing, indexing 
         and usage reporting, extensible scanning functionality... and many more! Get the
         latest updates, follow us on twitter @archiva.
      

      
        And in case you were wondering, it is pronounced [ahr-kahy-vuh], like archive but with an a!
      

      
        
          1

          
            
            Take a look around 
          
          
            
            Take a look at the screenshots in the feature walkthrough.
          
          
        
      
      
        
          2

          
            Download Archiva 
          
          
            
              
              
              Latest stable release: Archiva 1.2.2 - September 2, 2009
            
            
            
              
              Latest 1.1.x release: Archiva 1.1.4 - April 22, 2009
            
            
            
              
              All downloads
            
          
        
      
      
        [x]
        Archiva 1.1.4
        
          This is the recommended 1.1.x release of Archiva.
        
        
          
            
               
              Mirrors
              Checksum
              Signature
            
            
              Archiva 1.1.4 Standalone
              zip
              md5
              asc
            
            
              Archiva 1.1.4 WAR
              war
              md5
              asc
            
           
        
        Release Notes | More downloads
      
      
        [x]
        Archiva 1.2.2
        
          This is the recommended latest release of Archiva.
        
        
          
            
               
              Mirrors
              Checksum
              Signature
            
            
              Archiva 1.2.2 Standalone
              zip
              md5
              asc
            
            
              Archiva 1.2.2 WAR
              war
              md5
              asc
            
           
        
        Release Notes | More downloads
      
      
        
          3

          
            Documentation 
          
          
            
            Simple out of the box configuration and quick start guide
            
            
            Read the users guide and administration documentation
            
            
            Documentation is also available for previous versions
          
        
      
      
        
          4

          
            Get involved 
          
          
            Get support from the mailing lists and wiki, file issues, and even get involved in the development.
          
          
            We would like to thank all the sponsors that provide financial assistance to the Apache Software Foundation.
            For more information on how you can support the foundation, see the sponsorship page.
          
          
        
      
    

    Resources
      
        Need more? Try some of these resources.
      
      
        Books
        
          
            
              
              Apache Maven 2: Effective Implementation (Maria Odea Ching, Brett Porter; September 2009)
              
                Build and manage applications with Maven, Continuum and Archiva
              
            
          
          
            
              
              Java Power Tools (John Smart; April 2008)
              
                Contains a section on Archiva and repository management
              
            
          
        
      
      
        Articles, Presentations and Tutorials
        
          Managing Your Repositories With Archiva - Archiva @ ApacheCon Europe (Deng Ching; March 27, 2009)
          The Hype about Repository Managers - Comparative review of Archiva and other repository managers (Deng Ching; November 2007)
          Archiva 1.1.1 Tutorial in Spanish! - Video also available here - (Ángel García Jerez; September 2008)
        
      
    
  

      
    
    
      
    
    
      &#169;  
          2006-2009
    
          The Apache Software Foundation
          
  

  
    
  
  
  
      
        
      
    
  




            Plugins - Grails - Codehaus
    
        

                        
    
    
            





    // Deprecated global variables. To be removed in a future version of Confluence.
    var contextPath = '';
    var i18n = [];


    


















































    

    

    
    



    







    
    
    
    


    

        
                
            Quick Search
            
            
        
        
            

            
                      
    
    
                    
        
            
        Browse         
                        
                                        
    
    
                   Pages            

                                        
    
    
                   News            

                                        
    
    
                   Labels            

                                        
    
    
                   Attachments            

                                        
    
    
                   Bookmarks            

                                        
    
    
                   Mail            

                                        
    
    
                   Advanced            

                            
                    
    
        
                                                         
    
    
                   Log In            

                            
    
    
                   Sign Up            

                            
    
    
    
                    
        
                                    Dashboard
                
                    
        
                                    Grails
                
                                        &#8230;
                                    
        
                                    Home
                
                                
        
                                    QuickLinks
                
                    
        
                                    Download
                
                    
        
                                    Plugins
                
        



    
                
                                
            Log In

                                            Sign Up
                                            
        
    
        
            
        
        
                                
                        
            
        Tools         
                        
                                        
    
    
                   Attachments (0)            

                                        
    
    
                   Page History            

                            
                        
                                        
    
    
                   Info            

                                        
    
    
                   View Wiki Markup            

                                        
    
    
                   Export to PDF            

                                        
    
    
                   Export to Word            

                            
                    
    
            
    

    
    
                            
		
					            Plugins
    				
    

    

    
    
    
    




    
    

    
    
        
    
    
     



     
          
     
     




                      

         
         
    
                
                    Added by graeme, last edited by Tom Corcoran on Oct 23, 2008
                                        &nbsp;(view change)
                            
            
      
      Comment:
      
  

    
      var show = document.getElementById('show');
      var hide = document.getElementById('hide');
      var versionComment = document.getElementById('versionComment');

      function showComment(){
        show.style.display = 'none';
        hide.style.display = 'inline';
        versionComment.style.display = 'block';
      }

      function hideComment(){
        show.style.display = 'inline';
        hide.style.display = 'none';
        versionComment.style.display = 'none';
      }

    
         
         
            
            Grails Plugins

This page contains links to the documentation for each plugin that is available for Grails.

Testing


	Functional Testing with Canoo WebTest
	Test Code Coverage Plugin
	Selenium plugin (run functional tests in the browser)
	jsUnit plugin (test javascript)
	DBUnit Plugin



Rich Client/Ajax Plugins


	DWR Plugin
	Dynamic Javascript Plugin
	Echo2 Plugin
	GWT Plugin
	OpenLaszlo plugin
	RichUI Plugin
	ZK Plugin
	Flex Plugin
	ULC Plugin
	ModalBox Plugin
	Yahoo&#33; UI Library (YUI) Plugin
	Ext JavaScript Library Plugin
	Syntax Highlighter Plugin



Chart Plugins


	Google Chart Plugin
	JFreeChart Eastwood Plugin
	Open Flash Chart Plugin



Web Services Plugins


	XFire plugin
	Remoting Plugin
	XML-RPC Plugin
	Apache Axis2 Plugin



Performance / Utility Plugins


	Static Resources Plugin (serve resources from outside your web-app easily)
	p6spy plugin (database statement logging)
	Cacheable Plugin (application level caching)
	Amazon S3 Plugin
	WebXML Plugin Allows adding configurable features to the web.xml file without having to write a plugin.
	Jawr plugin&nbsp;Javascript/CSS bundling and compression tool for grails web apps. All the features from the Jawr library ported to Grails.



Scheduling Plugins


	Quartz Plugin



Security Plugins


	AcegiSecurity Plugin
	JSecurity Plugin
	Authentication Plugin
	Simple Captcha Plugin
	JCaptcha Plugin
	CAS Client Plugin
	ClamAV Plugin
	Atlassian Crowd Plugin
	OpenID Plugin
	OAuth Plugin
	ReCaptcha Plugin
	License Management Plugin



Web Design Plugins


	sIFR Plugin
	Skinnable Plugin



Search


	Searchable Plugin &#45; rich search functionality with minimum effort. Built on Compass and Lucene



Scaffolding / Templating / Binding plugins


	DjangoTemplates Plugin
	GroovyBinder Plugin
	ScaffoldTags Plugin
	Extended Data Binding Plugin



Internationalization (i18n) plugins


	I18n Templates Plugin
	i18n&#45;gettext Plugin



Persistence Plugins


	Explicit Insert Plugin adds an insert method to all domain classes to resolve save() issues with legacy tables with assigned keys and no version or timestamp.
	Acts As Taggable Plugin add the acts_as_taggable ability to domain class
	Systemi Grails Domain Plugin generates Grails domain classes from a legacy IBM System i (a.k.a. AS/400, a.k.a. iSeries) table
	Grails Audit Logging Plugin track who changed what via Hibernate events, can be optionally configured to log users from multiple security plugins, adds onChange event handler to marked domain classes and exposes old and new values.



Functionality plugins


	Radeox plugin for the Radeox wiki engine
	Mondrian plugin to add Mondrian and JPivot OLAP
	FCK editor plugin &#45; WYSIWYG text editor with buillt in image and flash upload capabilities.
	JMS Plugin to add Message Driven Bean functionality
	Feeds Plugin to generate RSS/Atom feeds easily
	ImageTools plugin provides some JAI helper classes for image handling
	Currencies plugin provide Money and Exchange Rate handling classes.
	Encryption plugin, for Blowfish and PGP encryption, as well as handling salted passwords.
	PostCode Plugin provides UK postcode lookup to lat/lon and distance between postcode functionality
	Ref Code Plugin provides funtionality for storing and accessing simple reference data



Other Frameworks


	Wicket Plugin
	Struts 1 Plugin



Database Change Tracking


	LiquiBase Plugin
	dbmigrate Plugin



LDAP


	LDAP Plugin &#45; Add LDAP connectivity through Gldapo



Report


	Jasper Plugin &#45; Add Jasper reports in your web application easily.
	Birt Plugin &#45; Integrate Birt Reporting into your application.



Rules Engine


	Drools Plugin &#45; Add Drools Rules Engine to your application




For creating your own plugins see the The Plug&#45;in Developers Guide.
         

         
         

-->

             
    
    
    



    Labels parameters
    
    
    
    
    



    
        Labels
            

    
        
                    

        
        
            
                
                    
                

                Enter labels to add to this page:

                
                
                
                
                    &nbsp;
                    
                
                
                
                    
                    Looking for a label? Just start typing.
                
            
        
    


                     
        
        
            
                Children (64)
            
            
                &nbsp;
                                    Hide Children
                
                &nbsp;|&nbsp; View in Hierarchy
                            
        
                    
                                                     
                         Acts As Taggable Plugin
                             
                                                     
                         Apache Axis2 Plugin
                             
                                                     
                         Authentication Plugin
                             
                                                     
                         Birt Plugin
                             
                                                     
                         CAS Client Plugin
                             
                                                     
                         ClamAV Plugin
                             
                                                     
                         Converters Plugin
                             
                                                     
                         Crowd Plugin
                             
                                                     
                         Currencies plugin
                             
                                                     
                         DBUnit Plugin
                             
                                                     
                         Dijit &amp; Dojo 1.x Plugin
                             
                                                     
                         DjangoTemplates Plugin
                             
                                                     
                         Drools Plugin
                             
                                                     
                         DWR Plugin
                             
                                                     
                         Dynamic Javascript Plugin
                             
                                                     
                         Echo2 Plugin
                             
                                                     
                         Encryption plugin
                             
                                                     
                         Explicit Insert Plugin
                             
                                                     
                         Extended Data Binding Plugin
                             
                                                     
                         Ext Plugin
                             
                                                     
                         FCK editor plugin
                             
                                                     
                         Feeds Plugin
                             
                                                     
                         Google Chart Plugin
                             
                                                     
                         GroovyBinder Plugin
                             
                                                     
                         GWT Plugin
                             
                                                     
                         i18n-gettext Plugin
                             
                                                     
                         I18n Templates Plugin
                             
                                                     
                         ImageTools plugin
                             
                                                     
                         Jasper Plugin
                             
                                                     
                         jawr plugin
                             
                                                     
                         JCaptcha Plugin
                             
                                                     
                         JFreeChart Eastwood Plugin
                             
                                                     
                         JMS Plugin
                             
                                                     
                         JSecurity Plugin
                             
                                                     
                         jsUnit plugin
                             
                                                     
                         LDAP Plugin
                             
                                                     
                         License Plugin
                             
                                                     
                         ModalBox Plugin
                             
                                                     
                         Mondrian plugin
                             
                                                     
                         Monitor plugin
                             
                                                     
                         Open Flash Chart Plugin
                             
                                                     
                         OpenID Plugin
                             
                                                     
                         p6spy plugin
                             
                                                     
                         PostCode Plugin
                             
                                                     
                         Profiler Plugin
                             
                                                     
                         Quartz Plugin
                             
                                                     
                         Radeox plugin
                             
                                                     
                         Ref Code Plugin
                             
                                                     
                         Remoting Plugin
                             
                                                     
                         REST plugin
                             
                                                     
                         RichUI Plugin
                             
                                                     
                         ScaffoldTags Plugin
                             
                                                     
                         Searchable Plugin
                             
                                                     
                         Selenium plugin
                             
                                                     
                         sIFR Plugin
                             
                                                     
                         Simple Captcha Plugin
                             
                                                     
                         Skinnable Plugin
                             
                                                     
                         Struts 1 Plugin
                             
                                                     
                         SyntaxHighlighter Plugin
                             
                                                     
                         Systemi Grails Domain Plugin
                             
                                                     
                         Test Code Coverage Plugin
                             
                                                     
                         ULC Plugin
                             
                                                     
                         WebXML Plugin
                             
                                                     
                         Wicket Plugin
                             
                            
                
    
             






    
        
    
    



    
    







    
            
            
                Comments (1)
            
            &nbsp;
            
                
                    Hide Comments
                    Show Comments
                
                
                    Collapse All
                    Collapsing&hellip;
                    Expanding&hellip;
                    Expand All
                
                            
        
    
    
                            
                        
                    
                
                                    
                
                    Jan 15, 2008
                
                
                    Carl Garcia says:
                                        It appears that the plugins.grails.org repository is down...is there an alternat...
                
                
                    
                        It appears that the plugins.grails.org repository is down...is there an alternative for downloading the RichUi plugin?

Thanks&#33; 
                    
                    
                                                    
                                                          
            Permalink
            
                            
            
                    
                
            

            
         

-->

                    
            
                
    
                                    



               

    




                                        
                  Powered by a free Atlassian Confluence Open Source Project License granted to Codehaus. Evaluate Confluence today.
                
                            
        Powered by Atlassian Confluence 3.0.1, the Enterprise Wiki.
        Printed by Atlassian Confluence 3.0.1, the Enterprise Wiki.
        Bug/feature request &#8211;
        Atlassian news &#8211;
        Contact administrators
    



var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));


var pageTracker = _gat._getTracker("UA-5294457-2");
pageTracker._trackPageview();






.NET Framework - Wikipedia, the free encyclopedia

























var skin="monobook",
stylepath="/skins-1.5",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://en.wikipedia.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName=".NET_Framework",
wgTitle=".NET Framework",
wgAction="view",
wgArticleId=60402,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=320016138,
wgVersion="1.16alpha-wmf",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Wikipedia", "5": "Wikipedia talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk", "100": "Portal", "101": "Portal talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "wikipedia": 4, "wikipedia_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "portal": 100, "portal_talk": 101, "wp": 4, "wt": 5, "image": 6, "image_talk": 7},
wgMWSuggestTemplate="http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest",
wgDBname="enwiki",
wgSearchNamespaces=[0],
wgMWSuggestMessages=["with suggestions", "no suggestions"],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgNotice="",
wgNoticeLocal="";







	




	
		
	
		
		if (wgNotice != '') document.writeln(wgNotice);		.NET Framework
		
			From Wikipedia, the free encyclopedia
			
									Jump to: navigation, search			
			




The neutrality of this article is disputed. Please see the discussion on the talk page. Please do not remove this message until the dispute is resolved. (September 2009)



.NET Framework








Developer(s)
Microsoft


Stable release
3.5.30729.1 (3.5 SP1) / 2008-08-11; 13 months ago


Preview release
4.0 (4.0 B1) / 2009-05-20; 4 months ago


Operating system
Windows NT 4.0, Windows 98 and above


Type
Software framework


License
MS-EULA, BCL under Microsoft Reference License[1]


Website
msdn.microsoft.com/netframework


The Microsoft .NET Framework is a software framework that can be installed on computers running Microsoft Windows operating systems. It includes a large library of coded solutions to common programming problems and a virtual machine that manages the execution of programs written specifically for the framework. The .NET Framework is a Microsoft offering and is intended to be used by most new applications created for the Windows platform.
The framework's Base Class Library provides a large range of features including user interface, data and data access, database connectivity, cryptography, web application development, numeric algorithms, and network communications. The class library is used by programmers, who combine it with their own code to produce applications.
Programs written for the .NET Framework execute in a software environment that manages the program's runtime requirements. Also part of the .NET Framework, this runtime environment is known as the Common Language Runtime (CLR). The CLR provides the appearance of an application virtual machine so that programmers need not consider the capabilities of the specific CPU that will execute the program. The CLR also provides other important services such as security, memory management, and exception handling. The class library and the CLR together constitute the .NET Framework.
Version 3.0 of the .NET Framework is included with Windows Server 2008 and Windows Vista. The current version of the framework can also be installed on Windows XP and the Windows Server 2003 family of operating systems.[2] A reduced version of the .NET Framework, the .NET Compact Framework, is also available on Windows Mobile platforms, including smartphones. Version 4.0 of the framework was released as a public Beta on 20 May 2009.[3]




Contents


1 Principal design features
2 Architecture

2.1 Common Language Infrastructure (CLI)
2.2 Assemblies
2.3 Metadata
2.4 Security
2.5 Class library
2.6 Memory management


3 Standardization and licensing
4 Versions

4.1 .NET Framework 1.0
4.2 .NET Framework 1.1

4.2.1 Changes in 1.1 on comparison with 1.0


4.3 .NET Framework 2.0

4.3.1 Changes in 2.0 in comparison with 1.1


4.4 .NET Framework 3.0
4.5 .NET Framework 3.5

4.5.1 Changes since version 3.0
4.5.2 Service Pack 1


4.6 .NET Framework 4.0


5 .NET vs. Java and Java EE
6 Criticism
7 Alternative implementations
8 See also
9 References
10 External links





//

[edit] Principal design features

Interoperability&#160;
Because interaction between new and older applications is commonly required, the .NET Framework provides means to access functionality that is implemented in programs that execute outside the .NET environment. Access to COM components is provided in the System.Runtime.InteropServices and System.EnterpriseServices namespaces of the framework; access to other functionality is provided using the P/Invoke feature.
Common Runtime Engine&#160;
The Common Language Runtime (CLR) is the virtual machine component of the .NET framework. All .NET programs execute under the supervision of the CLR, guaranteeing certain properties and behaviors in the areas of memory management, security, and exception handling.
Language Independence&#160;
The .NET Framework introduces a Common Type System, or CTS. The CTS specification defines all possible datatypes and programming constructs supported by the CLR and how they may or may not interact with each other. Because of this feature, the .NET Framework supports the exchange of instances of types between programs written in any of the .NET languages. This is discussed in more detail in Microsoft .NET Languages.
Base Class Library&#160;
The Base Class Library (BCL), part of the Framework Class Library (FCL), is a library of functionality available to all languages using the .NET Framework. The BCL provides classes which encapsulate a number of common functions, including file reading and writing, graphic rendering, database interaction and XML document manipulation.
Simplified Deployment&#160;
The .NET framework includes design features and tools that help manage the installation of computer software to ensure that it does not interfere with previously installed software, and that it conforms to security requirements.
Security&#160;
The design is meant to address some of the vulnerabilities, such as buffer overflows, that have been exploited by malicious software. Additionally, .NET provides a common security model for all applications.
Portability&#160;
The design of the .NET Framework allows it to theoretically be platform agnostic, and thus cross-platform compatible. That is, a program written to use the framework should run without change on any type of system for which the framework is implemented. Microsoft's commercial implementations of the framework cover Windows, Windows CE, and the Xbox 360.[4] In addition, Microsoft submits the specifications for the Common Language Infrastructure (which includes the core class libraries, Common Type System, and the Common Intermediate Language),[5][6][7] the C# language,[8] and the C++/CLI language[9] to both ECMA and the ISO, making them available as open standards. This makes it possible for third parties to create compatible implementations of the framework and its languages on other platforms.

[edit] Architecture




Visual overview of the Common Language Infrastructure (CLI)


[edit] Common Language Infrastructure (CLI)
Main article: Common Language Infrastructure
The purpose of the Common Language Infrastructure, or CLI, is to provide a language-neutral platform for application development and execution, including functions for exception handling, garbage collection, security, and interoperability. By implementing the core aspects of the .NET Framework within the scope of the CLI, this functionality will not be tied to a single language but will be available across the many languages supported by the framework. Microsoft's implementation of the CLI is called the Common Language Runtime, or CLR.
[edit] Assemblies
Main article: .NET assembly
The CIL code is housed in .NET assemblies. As mandated by specification, assemblies are stored in the Portable Executable (PE) format, common on the Windows platform for all DLL and EXE files. The assembly consists of one or more files, one of which must contain the manifest, which has the metadata for the assembly. The complete name of an assembly (not to be confused with the filename on disk) contains its simple text name, version number, culture, and public key token. The public key token is a unique hash generated when the assembly is compiled, thus two assemblies with the same public key token are guaranteed to be identical from the point of view of the framework. A private key can also be specified known only to the creator of the assembly and can be used for strong naming and to guarantee that the assembly is from the same author when a new version of the assembly is compiled (required to add an assembly to the Global Assembly Cache).
[edit] Metadata
Main article: .NET metadata
All CIL is self-describing through .NET metadata. The CLR checks the metadata to ensure that the correct method is called. Metadata is usually generated by language compilers but developers can create their own metadata through custom attributes. Metadata contains information about the assembly, and is also used to implement the reflective programming capabilities of .NET Framework.
[edit] Security
.NET has its own security mechanism with two general features: Code Access Security (CAS), and validation and verification. Code Access Security is based on evidence that is associated with a specific assembly. Typically the evidence is the source of the assembly (whether it is installed on the local machine or has been downloaded from the intranet or Internet). Code Access Security uses evidence to determine the permissions granted to the code. Other code can demand that calling code is granted a specified permission. The demand causes the CLR to perform a call stack walk: every assembly of each method in the call stack is checked for the required permission; if any assembly is not granted the permission a security exception is thrown.
When an assembly is loaded the CLR performs various tests. Two such tests are validation and verification. During validation the CLR checks that the assembly contains valid metadata and CIL, and whether the internal tables are correct. Verification is not so exact. The verification mechanism checks to see if the code does anything that is 'unsafe'. The algorithm used is quite conservative; hence occasionally code that is 'safe' does not pass. Unsafe code will only be executed if the assembly has the 'skip verification' permission, which generally means code that is installed on the local machine.
.NET Framework uses appdomains as a mechanism for isolating code running in a process. Appdomains can be created and code loaded into or unloaded from them independent of other appdomains. This helps increase the fault tolerance of the application, as faults or crashes in one appdomain do not affect rest of the application. Appdomains can also be configured independently with different security privileges. This can help increase the security of the application by isolating potentially unsafe code. The developer, however, has to split the application into subdomains; it is not done by the CLR.
[edit] Class library



Namespaces in the BCL[10]


System


System. CodeDom


System. Collections


System. Diagnostics


System. Globalization


System. IO


System. Resources


System. Text


System. Text.RegularExpressions



See also: Base Class Library&#160;and Framework Class Library
The .NET Framework includes a set of standard class libraries. The class library is organized in a hierarchy of namespaces. Most of the built in APIs are part of either System.* or Microsoft.* namespaces. These class libraries implement a large number of common functions, such as file reading and writing, graphic rendering, database interaction, and XML document manipulation, among others. The .NET class libraries are available to all .NET languages. The .NET Framework class library is divided into two parts: the Base Class Library and the Framework Class Library.
The Base Class Library (BCL) includes a small subset of the entire class library and is the core set of classes that serve as the basic API of the Common Language Runtime.[10] The classes in mscorlib.dll and some of the classes in System.dll and System.core.dll are considered to be a part of the BCL. The BCL classes are available in both .NET Framework as well as its alternative implementations including .NET Compact Framework, Microsoft Silverlight and Mono.
The Framework Class Library (FCL) is a superset of the BCL classes and refers to the entire class library that ships with .NET Framework. It includes an expanded set of libraries, including WinForms, ADO.NET, ASP.NET, Language Integrated Query, Windows Presentation Foundation, Windows Communication Foundation among others. The FCL is much larger in scope than standard libraries for languages like C++, and comparable in scope to the standard libraries of Java.
[edit] Memory management
The .NET Framework CLR frees the developer from the burden of managing memory (allocating and freeing up when done); instead it does the memory management itself. To this end, the memory allocated to instantiations of .NET types (objects) is done contiguously[11] from the managed heap, a pool of memory managed by the CLR. As long as there exists a reference to an object, which might be either a direct reference to an object or via a graph of objects, the object is considered to be in use by the CLR. When there is no reference to an object, and it cannot be reached or used, it becomes garbage. However, it still holds on to the memory allocated to it. .NET Framework includes a garbage collector which runs periodically, on a separate thread from the application's thread, that enumerates all the unusable objects and reclaims the memory allocated to them.
The .NET Garbage Collector (GC) is a non-deterministic, compacting, mark-and-sweep garbage collector. The GC runs only when a certain amount of memory has been used or there is enough pressure for memory on the system. Since it is not guaranteed when the conditions to reclaim memory are reached, the GC runs are non-deterministic. Each .NET application has a set of roots, which are pointers to objects on the managed heap (managed objects). These include references to static objects and objects defined as local variables or method parameters currently in scope, as well as objects referred to by CPU registers.[11] When the GC runs, it pauses the application, and for each object referred to in the root, it recursively enumerates all the objects reachable from the root objects and marks them as reachable. It uses .NET metadata and reflection to discover the objects encapsulated by an object, and then recursively walk them. It then enumerates all the objects on the heap (which were initially allocated contiguously) using reflection. All objects not marked as reachable are garbage.[11] This is the mark phase.[12] Since the memory held by garbage is not of any consequence, it is considered free space. However, this leaves chunks of free space between objects which were initially contiguous. The objects are then compacted together, by using memcpy[12] to copy them over to the free space to make them contiguous again.[11] Any reference to an object invalidated by moving the object is updated to reflect the new location by the GC.[12] The application is resumed after the garbage collection is over.
The GC used by .NET Framework is actually generational.[13] Objects are assigned a generation; newly created objects belong to Generation 0. The objects that survive a garbage collection are tagged as Generation 1, and the Generation 1 objects that survive another collection are Generation 2 objects. The .NET Framework uses up to Generation 2 objects.[13] Higher generation objects are garbage collected less frequently than lower generation objects. This helps increase the efficiency of garbage collection, as older objects tend to have a larger lifetime than newer objects.[13] Thus, by removing older (and thus more likely to survive a collection) objects from the scope of a collection run, fewer objects need to be checked and compacted.[13]
[edit] Standardization and licensing
In August 2000, Microsoft, Hewlett-Packard, and Intel worked to standardize CLI and the C# programming language. By December 2001, both were ratified ECMA standards (ECMA 335 and ECMA 334). ISO followed in April 2003 - the current version of the ISO standards are ISO/IEC 23271:2006 and ISO/IEC 23270:2006.[14][15]
While Microsoft and their partners hold patents[citation needed] for the CLI and C#, ECMA and ISO require that all patents essential to implementation be made available under "reasonable and non-discriminatory terms". In addition to meeting these terms, the companies have agreed to make the patents available royalty-free.[citation needed]
However, this does not apply for the part of the .NET Framework which is not covered by the ECMA/ISO standard, which includes Windows Forms, ADO.NET, and ASP.NET. Patents that Microsoft holds[citation needed] in these areas may deter non-Microsoft implementations of the full framework[16].
On 3 October 2007, Microsoft announced that much of the source code for the .NET Framework Base Class Library (including ASP.NET, ADO.NET, and Windows Presentation Foundation) was to have been made available with the final release of Visual Studio 2008 towards the end of 2007 under the shared source Microsoft Reference License.[1] The source code for other libraries including Windows Communication Foundation (WCF), Windows Workflow Foundation (WF), and Language Integrated Query (LINQ) were to be added in future releases. Being released under the non Open-source Microsoft Reference License means this source code is made available for debugging purpose only, primarily to support integrated debugging of the BCL in Visual Studio.
[edit] Versions
Microsoft started development on the .NET Framework in the late 1990s originally under the name of Next Generation Windows Services (NGWS). By late 2000 the first beta versions of .NET 1.0 were released.[17]




The .NET Framework stack.




Version
Version Number
Release Date
Visual Studio
Default in Windows


1.0
1.0.3705.0
2002-02-13
Visual Studio .NET



1.1
1.1.4322.573
2003-04-24
Visual Studio .NET 2003
Windows Server 2003


2.0
2.0.50727.42
2005-11-07
Visual Studio 2005



3.0
3.0.4506.30
2006-11-06

Windows Vista, Windows Server 2008


3.5
3.5.21022.8
2007-11-19
Visual Studio 2008
Windows 7, Windows Server 2008 R2


4.0 Beta 1

2009-05-20
Visual Studio 2010



A more complete listing of the releases of the .NET Framework may be found on the .NET Framework version list.
[edit] .NET Framework 1.0




The old .NET Framework logo


This is the first release of the .NET Framework, released on 13 February 2002 and available for Windows 98, Me, NT 4.0, 2000, and XP. Mainstream support by Microsoft for this version ended 10 July 2007, and extended support ended 14 July 2009.[18]
[edit] .NET Framework 1.1
This is the first major .NET Framework upgrade. It is available on its own as a redistributable package or in a software development kit, and was published on 3 April 2003. It is also part of the second release of Microsoft Visual Studio .NET (released as Visual Studio .NET 2003). This is the first version of the .NET Framework to be included as part of the Windows operating system, shipping with Windows Server 2003. Mainstream support for .NET Framework 1.1 ended on 14 October 2008, and extended support ends on 8 October 2013. Since .NET 1.1 is a component of Windows Server 2003, extended support for .NET 1.1 on Server 2003 will run out with that of the OS - currently 14 July 2015.
[edit] Changes in 1.1 on comparison with 1.0

Built-in support for mobile ASP.NET controls. Previously available as an add-on for .NET Framework, now part of the framework.
Security changes - enable Windows Forms assemblies to execute in a semi-trusted manner from the Internet, and enable Code Access Security in ASP.NET applications.
Built-in support for ODBC and Oracle databases. Previously available as an add-on for .NET Framework 1.0, now part of the framework.
.NET Compact Framework - a version of the .NET Framework for small devices.
Internet Protocol version 6 (IPv6) support.
Numerous API changes.

[edit] .NET Framework 2.0
Released with Visual Studio 2005, Microsoft SQL Server 2005, and BizTalk 2006.

The 2.0 Redistributable Package can be downloaded for free from Microsoft, and was published on 22 January 2006.
The 2.0 Software Development Kit (SDK) can be downloaded for free from Microsoft.
It is included as part of Visual Studio 2005 and Microsoft SQL Server 2005.
Version 2.0 without any Service Pack is the last version with support for Windows 98 and Windows Me. Version 2.0 with Service Pack 2 is the last version with official support for Windows 2000 although there have been some unofficial workarounds published online to use a subset of the functionality from Version 3.5 in Windows 2000.[19] Version 2.0 with Service Pack 2 requires Windows 2000 with SP4 plus KB835732 or KB891861 update, Windows XP with SP2 or later and Windows Installer 3.1 (KB893803-v2).
It shipped with Windows Server 2003 R2 (not installed by default).

[edit] Changes in 2.0 in comparison with 1.1

Numerous API changes.
A new hosting API for native applications wishing to host an instance of the .NET runtime. The new API gives a fine grain control on the behavior of the runtime with regards to multithreading, memory allocation, assembly loading and more (detailed reference). It was initially developed to efficiently host the runtime in Microsoft SQL Server, which implements its own scheduler and memory manager.
Full 64-bit support for both the x64 and the IA64 hardware platforms.
Language support for generics built directly into the .NET CLR.
Many additional and improved ASP.NET web controls.
New data controls with declarative data binding.
New personalization features for ASP.NET, such as support for themes, skins and webparts.
.NET Micro Framework - a version of the .NET Framework related to the Smart Personal Objects Technology initiative.
Partial classes
Anonymous methods
Data Tables

[edit] .NET Framework 3.0
.NET Framework 3.0, formerly called WinFX,[20] was released on 21 November 2006. It includes a new set of managed code APIs that are an integral part of Windows Vista and Windows Server 2008 operating systems. It is also available for Windows XP SP2 and Windows Server 2003 as a download. There are no major architectural changes included with this release; .NET Framework 3.0 uses the Common Language Runtime of .NET Framework 2.0.[21] Unlike the previous major .NET releases there was no .NET Compact Framework release made as a counterpart of this version.
.NET Framework 3.0 consists of four major new components:

Windows Presentation Foundation (WPF), formerly code-named Avalon; a new user interface subsystem and API based on XML and vector graphics, which uses 3D computer graphics hardware and Direct3D technologies. See WPF SDK for developer articles and documentation on WPF.
Windows Communication Foundation (WCF), formerly code-named Indigo; a service-oriented messaging system which allows programs to interoperate locally or remotely similar to web services.
Windows Workflow Foundation (WF) allows for building of task automation and integrated transactions using workflows.
Windows CardSpace, formerly code-named InfoCard; a software component which securely stores a person's digital identities and provides a unified interface for choosing the identity for a particular transaction, such as logging in to a website.

[edit] .NET Framework 3.5
Version 3.5 of the .NET Framework was released on 19 November 2007, but it is not included with Windows Server 2008. As with .NET Framework 3.0, version 3.5 uses the CLR of version 2.0. In addition, it installs .NET Framework 2.0 SP1, (installs .NET Framework 2.0 SP2 with 3.5 SP1) and .NET Framework 3.0 SP1 (installs .NET Framework 3.0 SP2 with 3.5 SP1), which adds some methods and properties to the BCL classes in version 2.0 which are required for version 3.5 features such as Language Integrated Query (LINQ). These changes do not affect applications written for version 2.0, however.[22]
As with previous versions, a new .NET Compact Framework 3.5 was released in tandem with this update in order to provide support for additional features on Windows Mobile and Windows Embedded CE devices.
The source code of the Base Class Library in this version has been partially released (for debugging reference only) under the Microsoft Reference Source License.[1]
[edit] Changes since version 3.0

New language features in C# 3.0 and VB.NET 9.0 compiler
Adds support for expression trees and lambda methods
Extension methods
Expression trees to represent high-level source code at runtime.[23]
Anonymous types with static type inference
Language Integrated Query (LINQ) along with its various providers

LINQ to Objects
LINQ to XML
LINQ to SQL


Paging support for ADO.NET
ADO.NET synchronization API to synchronize local caches and server side datastores
Asynchronous network I/O API[23] .
Peer-to-peer networking stack, including a managed PNRP resolver[24]
Managed wrappers for Windows Management Instrumentation and Active Directory APIs[25]
Enhanced WCF and WF runtimes, which let WCF work with POX and JSON data, and also expose WF workflows as WCF services.[26] WCF services can be made stateful using the WF persistence model.[23]
Support for HTTP pipelining and syndication feeds.[26]
ASP.NET AJAX is included
New System.CodeDom namespace.

[edit] Service Pack 1
The .NET Framework 3.5 Service Pack 1 was released on 11 August 2008. This release adds new functionality and provides performance improvements under certain conditions,[27] especially with WPF where 20-45% improvements are expected. Two new data service components have been added, the ADO.NET Entity Framework and ADO.NET Data Services. Two new assemblies for web development, System.Web.Abstraction and System.Web.Routing, have been added; these are used in the ASP.NET MVC Framework and, reportedly, will be utilized in the future release of ASP.NET Forms applications. Service Pack 1 is included with SQL Server 2008 and Visual Studio 2008 Service Pack 1.
There is also a new variant of the .NET Framework, called the ".NET Framework Client Profile", which at 28 MB is a lot smaller than the full framework and only installs components that are the most relevant to desktop applications.[28] However, the Client Profile amounts to this size only if using the online installer. When using the off-line installer, the download size is still 250 MB.[29]
[edit] .NET Framework 4.0
Microsoft announced the .NET Framework 4.0 on 29 September 2008. The Public Beta was released on 20 May 2009.[3] Some focuses of this release are:

Parallel Extensions to improve support for parallel computing, which target multi-core or distributed systems.[30] To this end, they plan to include technologies like PLINQ (Parallel LINQ),[31] a parallel implementation of the LINQ engine, and Task Parallel Library, which exposes parallel constructs via method calls.[32]
Visual Basic and C# languages innovations such as statement lambdas, implicit line continuations, dynamic dispatch, named parameters, and optional parameters.
Full support for IronPython, IronRuby, and F#.[33]
Support for a subset of the .NET Framework and ASP.NET with the "Server Core" variant of Windows Server 2008 R2.[34]
Support for Code Contracts.
Inclusion of the Oslo modelling platform, along with the M programming language.[35]

In 28 July 2009, a second release of the .NET Framework 4.0 beta was made available with experimental software transactional memory support.[36] Whether this functionality will be available in the final version of the framework has not been confirmed.
In conjunction with .NET Framework 4.0, Microsoft will offer a set of enhancements, codenamed Dublin, for Windows Server 2008 application server capabilities.[37][38] Dublin will extend IIS to be a "standard host" for applications that use either WCF or WF.[38]
[edit] .NET vs. Java and Java EE
See also: Comparison of the Java and .NET platforms&#160;and Comparison of C# and Java
The CLI and .NET languages such as C# and VB have many similarities to Sun's JVM and Java. They are strong competitors. Both are based on a virtual machine model that hides the details of the computer hardware on which their programs run. Both use their own intermediate byte-code, Microsoft calling theirs Common Intermediate Language (CIL; formerly MSIL) and Sun calling theirs Java bytecode. On .NET the byte-code is always compiled before execution, either Just In Time (JIT) or in advance of execution using the ngen.exe utility. With Java the byte-code is either interpreted, compiled in advance, or compiled JIT. Both provide extensive class libraries that address many common programming requirements and address many security issues that are present in other approaches. The namespaces provided in the .NET Framework closely resemble the platform packages in the Java EE API Specification in style and invocation.
.NET in its complete form (i.e., Microsoft's implementation, described in the Standardization and licensing section of this article) can only be installed on computers running a Microsoft Windows operating system[39][40][41] whereas Java in its entirety can be installed on computers running any one of a variety of operating systems such as Linux, Solaris, Mac OS or Windows.[42] From its beginning .NET has supported multiple programming languages and at its core remains platform agnostic and standardized so that other vendors can implement it on other platforms (although Microsoft's implementation only targets Windows, Windows CE, and Xbox platforms). The Java platform was initially built to support only the Java language on many operating system platforms under the slogan "Write once, run anywhere." Other programming languages have been implemented on the Java Virtual Machine[43] but are less widely used (see JVM languages).
Sun's reference implementation of Java (including the class library, the compiler, the virtual machine, and the various tools associated with the Java Platform) is open source under the GNU GPL license with Classpath exception.[44] The source code for the .NET framework base class library is available for reference purposes only under the Microsoft Reference License.[45][46]
The third-party Mono Project, sponsored by Novell, has been developing an open source implementation of the ECMA standards that are part of .NET Framework, as well as most of the other non-ECMA standardized libraries in Microsoft's .NET. The Mono implementation is meant to run on Linux, Solaris, Mac OS X, BSD, HP-UX, and Windows platforms. Mono includes the CLR, the class libraries, and compilers for C# and VB.NET. The current version supports all the APIs in version 2.0 of Microsoft's .NET. Full support exists for C# 3.0 LINQ to Objects and LINQ to Xml.[47]
[edit] Criticism
Some concerns and criticism relating to .NET include:

Applications running in a managed environment tend to require more system resources than similar applications that access machine resources more directly.
Since CIL is easier to reverse-engineer than native code, there is concern over possible loss of trade secrets and the bypassing of license control mechanisms. Many obfuscation techniques already developed can help to prevent this; Microsoft's Visual Studio 2005 (and newer) includes such a tool. All "managed" languages have this limitation, including Java.
Newer versions of the framework (3.5 and up) are not pre-installed in versions of Windows below Windows 7. For this reason, applications must lead users without the framework through a procedure to install it. Some developers have expressed concerns about the large size and reliability of .NET framework runtime installers for end-users. The size is around 54 MB for .NET 3.0, 197 MB for .NET 3.5, and 250 MB for .NET 3.5 SP1 (while using web installer the typical download for Windows XP is around 50 MB, for Windows Vista - 20 MB).

The first service pack for version 3.5 mitigates this concern by offering a lighter-weight client-only subset of the full .NET Framework. Two significant limitations should be noted, though.[48] Firstly, the client-only subset is only an option on an existing Windows XP SP2 system that currently has no other version of the .NET framework installed. In all other scenarios, the client-only installer will install the full version of the .NET Framework 3.5 SP1. Secondly, the client-only framework does not have a 64-bit option. However, the 4.0 release of the .NET Framework Client Profile will be available on all operating systems and all architectures (excluding ia64) supported by the full .NET Framework.[49]


The .NET framework currently does not provide support for calling Streaming SIMD Extensions (SSE) via managed code. However, Mono has provided support for SIMD Extensions as of version 2.2 within the Mono.Simd namespace; Mono's lead developer Miguel de Icaza has expressed hope that this SIMD support will be adopted by the CLR ECMA standard.[50] Streaming SIMD Extensions have been available in CPUs since the introduction of the Pentium III.

[edit] Alternative implementations
The Microsoft .NET Framework is the predominant implementation of .NET technologies. Other implementations for parts of the framework exist. Since the runtime engine is described by an ECMA/ISO specification, other implementations of it are unencumbered by patent issues[citation needed]. It is more difficult to develop alternatives to the base class library (BCL), which is not described by an open standard and may be subject to copyright restrictions. Additionally, parts of the BCL have Windows-specific functionality and behavior, so implementation on non-Windows platforms can be problematic.
Some alternative implementations of parts of the framework are listed here.

Microsoft's Shared Source Common Language Infrastructure is a shared source implementation of the CLR component of the .NET Framework. However, the last version only runs on Microsoft Windows XP SP2, and does not contain all features of version 2.0 of the .NET Framework.
Microsoft's .NET Micro Framework is a .NET platform for extremely resource-constrained devices. It includes a small version of the .NET CLR and supports development in C# and debugging (in an emulator or on hardware), both using Microsoft Visual Studio. It also features a subset of the .NET base class libraries (about 70 classes with about 420 methods), a GUI framework loosely based on Windows Presentation Foundation, and additional libraries specific to embedded applications.
Mono is an implementation of the CLI and portions of the .NET Base Class Library (BCL), and provides additional functionality. It is dual-licensed under free software and proprietary software licenses. Mono is being developed by Novell, Inc. It includes support for ASP.NET, ADO.NET, and evolving support for Windows Forms libraries. It also includes a C# compiler, and a VB.NET compiler is in pre-beta form.
CrossNet is an implementation of the CLI and portions of the .NET Base Class Library (BCL). It is free software. It parses .NET assemblies and generates unmanaged C++ code that can be compiled and linked within any ANSI C++ application on any platform.
.NET for Symbian .NET Compact Framework implementation for Symbian (S60)
Portable.NET (part of DotGNU) provides an implementation of the Common Language Infrastructure (CLI), portions of the .NET Base Class Library (BCL), and a C# compiler. It supports a variety of CPUs and operating systems.

[edit] See also




Microsoft portal




Comparison of the Java and .NET platforms
COM Interop
Windows API


Components and libraries


Microsoft Enterprise Library - A collection of supplemental libraries for .NET.
Web Services Enhancements

[edit] References


^ a b c Scott Guthrie. "Releasing the Source Code for the NET Framework". http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx. Retrieved 2008-06-01.&#160;
^ Microsoft. "Microsoft .NET Framework 3.5 Administrator Deployment Guide". http://msdn.microsoft.com/library/cc160717.aspx. Retrieved 2008-06-26.&#160;
^ a b S. Somasegar. "Visual Studio 2010 and .NET FX 4 Beta 1 ships!". Archived from the original on 2009-05-27. http://www.webcitation.org/5h5lV7362. Retrieved 2009-05-25.&#160;
^ Microsoft has also previously released implementations of .NET 1.0 that could run on some Unix-based platforms such as FreeBSD and Mac OS X, but license restrictions limited these to educational use only, and they are no more available since .NET 1.1
^ "ECMA 335 - Standard ECMA-335 Common Language Infrastructure (CLI)". ECMA. 2006-06-01. http://www.ecma-international.org/publications/standards/Ecma-335.htm. Retrieved 2008-06-01.&#160;
^ ISO/IEC 23271:2006
^ "Technical Report TR/84 Common Language Infrastructure (CLI) - Information Derived from Partition IV XML File". ECMA. 2006-06-01. http://www.ecma-international.org/publications/techreports/E-TR-084.htm.&#160;
^ "ECMA-334 C# Language Specification". ECMA. 2006-06-01. http://www.ecma-international.org/publications/standards/Ecma-334.htm.&#160;
^ "Standard ECMA-372 C++/CLI Language Specification". ECMA. 2005-12-01. http://www.ecma-international.org/publications/standards/Ecma-372.htm.&#160;
^ a b "Base Class Library". http://msdn.microsoft.com/netframework/aa569603.aspx. Retrieved 2008-06-01.&#160;
^ a b c d "Garbage Collection: Automatic Memory Management in the Microsoft .NET Framework". Archived from the original on 2007-07-03. http://web.archive.org/web/20070703083608/http://msdn.microsoft.com/msdnmag/issues/1100/GCI/. Retrieved 2008-06-01.&#160;
^ a b c "Garbage collection in .NET". http://www.csharphelp.com/archives2/archive297.html. Retrieved 2008-06-01.&#160;
^ a b c d "Garbage Collection—Part 2: Automatic Memory Management in the Microsoft .NET Framework". Archived from the original on 2007-06-26. http://web.archive.org/web/20070626080134/http://msdn.microsoft.com/msdnmag/issues/1200/GCI2/default.aspx. Retrieved 2008-06-01.&#160;
^ ISO/IEC 23271:2006 - Information technology - Common Language Infrastructure (CLI) Partitions I to VI
^ ISO/IEC 23270:2006 - Information technology - Programming languages - C#
^ "Microsoft's Empty Promise". Free Software Foundation. 2009-07-16. Archived from the original on 2009-08-05. http://www.webcitation.org/5io4tT8mO. Retrieved 2009-078-03.  "However, there are several libraries that are included with Mono, and commonly used by applications like Tomboy, that are not required by the standard. And just to be clear, we're not talking about Windows-specific libraries like ASP.NET and Windows Forms. Instead, we're talking about libraries under the System namespace that provide common functionality programmers expect in modern programming languages"&#160;
^ "Framework Versions". http://ben.skyiv.com/clrversion.html.&#160;
^ "Microsoft Product Lifecycle Search". Microsoft. Archived from the original on 2009-09-05. http://www.webcitation.org/5jZfjU0F1. Retrieved 2008-01-25.&#160;
^ "Microsoft don". Archived from the original on 2009-04-19. http://www.webcitation.org/5g9t5nE7k. Retrieved 2009-03-05.&#160;
^ WinFX name change announcement
^ ".NET Framework 3.0 Versioning and Deployment Q&amp;A". http://msdn.microsoft.com/netframework/aa663314.aspx. Retrieved 2008-06-01.&#160;
^ "Catching RedBits differences in .NET 2.0 and .NET 2.0SP1". http://www.hanselman.com/blog/CommentView.aspx?guid=7cd75505-192f-4fef-b617-e47e1e2cb94b. Retrieved 2008-06-01.&#160;
^ a b c "What's New in the .NET Framework 3.5". http://msdn.microsoft.com/library/bb332048.aspx. Retrieved 2008-03-31.&#160;
^ Kevin Hoffman. "Orcas' Hidden Gem - The managed PNRP stack". http://dotnetaddict.dotnetdevelopersjournal.com/orcas_hidden_gem__the_managed_pnrp_stack.htm. Retrieved 2008-06-01.&#160;
^ ".NET Framework 3.5". http://www.danielmoth.com/Blog/2007/06/net-framework-35.html. Retrieved 2008-06-01.&#160;
^ a b Matt Winkle. "WCF and WF in "Orcas"". http://blogs.msdn.com/mwinkle/archive/2007/02/28/wcf-and-wf-in-quot-orcas-quot.aspx. Retrieved 2008-06-01.&#160;
^ "Visual Studio 2008 Service Pack 1 and .NET Framework 3.5 Service Pack 1". http://msdn.microsoft.com/vstudio/products/cc533447.aspx. Retrieved 2008-09-07.&#160;
^ Justin Van Patten (21 May 2008). ".NET Framework Client Profile". BCL Team Blog. MSDN Blogs. http://blogs.msdn.com/bclteam/archive/2008/05/21/net-framework-client-profile-justin-van-patten.aspx. Retrieved 2008-09-30.&#160;
^ Jaime Rodriguez (20 August 2008). "Client profile explained..". http://blogs.msdn.com/jaimer/archive/2008/08/20/client-profile-explained.aspx. Retrieved 2009-02-15.&#160;
^ S. Somasegar. "The world of multi and many cores". http://blogs.msdn.com/somasegar/archive/2007/05/09/the-world-of-multi-and-many-cores.aspx. Retrieved 2008-06-01.&#160;
^ "Parallel LINQ: Running Queries On Multi-Core Processors". http://msdn.microsoft.com/magazine/cc163329.aspx. Retrieved 2008-06-02.&#160;
^ "Parallel Performance: Optimize Managed Code For Multi-Core Machines". http://msdn.microsoft.com/magazine/cc163340.aspx. Retrieved 2008-06-02.&#160;
^ "Visual Studio 2010, .NET 4.0 Ppt Presentation". authorSTREAM. 25 February 2009. http://www.authorstream.com/presentation/amrik-155782-new-features-vs-2010-net-4-0-visual-studio-dot-vb-10-education-ppt-powerpoint/. Retrieved 2009-03-02.&#160;
^ "PDC2008 Sessions Overview". Microsoft. 28 May 2008. http://www.microsoftpdc.com/Agenda/Sessions.aspx. Retrieved 2008-05-28.&#160;
^ SDTimes - Microsoft details Oslo's modeling language, tools
^ "STM.NET on DevLabs". 27 July 2008. Archived from the original on 2009-08-10. http://www.webcitation.org/5iwEjbaov. Retrieved 2008-08-06.&#160;
^ "'Dublin' App Server coming to .NET 4.0". DevSource. http://www.devsource.com/c/a/Architecture/Dublin-App-Server-coming-toNET-40/. Retrieved 2009-04-27.&#160;
^ a b ".NET Framework 4.0 and Dublin Application Server". MSDN Blogs. http://blogs.msdn.com/architectsrule/archive/2008/10/01/net-framework-4-0-and-dublin-application-server.aspx. Retrieved 2009-04-27.&#160;
^ ".Net Framework 1.0 Redistributable Requirements". MSDN. http://msdn.microsoft.com/library/ms994373.aspx. Retrieved 2007-04-22.&#160;
^ ".Net Framework 1.1 Redistributable Requirements". MSDN. http://msdn.microsoft.com/library/ms994377.aspx. Retrieved 2007-04-22.&#160;
^ ".Net Framework 2.0 Redistributable Requirements". MSDN. http://msdn.microsoft.com/library/aa480241.aspx. Retrieved 2007-04-22.&#160;
^ "JRE 5.0 Installation Notes". Sun Developer Network. http://java.sun.com/j2se/1.5.0/jre/install.html. Retrieved 2007-04-22.&#160;
^ "Languages for the Java VM". http://www.is-research.de/info/vmlanguages/. Retrieved 2008-07-07.&#160;
^ "Free and Open Source Java". Sun.com. http://www.sun.com/software/opensource/java/. Retrieved 2008-06-01.&#160;
^ "Releasing the source code for the .Net framework libraries". Scott Guthrie - Microsoft. http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx.&#160;
^ "Microsoft Reference License". Microsoft. http://www.microsoft.com/resources/sharedsource/licensingbasics/referencelicense.mspx.&#160;
^ "FAQ: General". Mono. 2006-12-20. http://www.mono-project.com/FAQ:_General. Retrieved 2008-06-01.&#160;
^ .NET Framework Client Profile Deployment Scenarios
^ "'.NET Framework 4 Client Profile - Introduction'". Archived from the original on 2009-10-04. http://www.webcitation.org/5kHCQjtFS. Retrieved 2009-10-02.&#160;
^ Mono's SIMD Support: Making Mono safe for Gaming


[edit] External links



Wikibooks has a book on the topic of
.NET Development Foundation






Wikiversity has learning materials about Introduction to Microsoft.NET



.NET Framework Developer Center
Interview on Channel 9 with Jason Zander, general manager of the .NET Framework team, about .NET Fx 3.5; streaming wmv file.








v&#160;•&#160;d&#160;•&#160;e

.NET Framework





Architecture

Base Class Library&#160;· Common Language Runtime&#160;· Code Access Security&#160;· Assembly&#160;· Metadata&#160;· COM Interop







Common Language
Infrastructure (CLI)


Common Language Infrastructure&#160;· Common Type System&#160;· Common Intermediate Language&#160;· Virtual Execution System






CLI Languages





Common1


C#&#160;· Visual Basic .NET&#160;· C++/CLI (Managed)&#160;· F# &#160;· J# &#160;· JScript .NET&#160;· Windows PowerShell







Other2


Axum&#160;· A#&#160;· Boo&#160;· M&#160;· Oxygene &#160;· IronScheme (IronLisp)&#160;· IronPython&#160;· IronRuby&#160;· Nemerle&#160;· Phalanger&#160;· P#









Components

ADO.NET (Entity Framework&#160;· Data Services)&#160;· ASP.NET (AJAX&#160;· MVC&#160;· Dynamic Data)&#160;· Language Integrated Query&#160;· CardSpace&#160;· ClickOnce&#160;· Communication Foundation&#160;· Dynamic Language Runtime&#160;· Forms&#160;· Presentation Foundation&#160;· Remoting&#160;· Workflow Foundation &#160;· XAML






Other implementations

Mono&#160;· Compact Framework&#160;· XNA Framework&#160;· Micro Framework&#160;· Portable.NET&#160;· Silverlight&#160;· SSCLI&#160;· DotGNU






Comparisons

Java and C#&#160;· C# and Visual Basic .NET&#160;· Java and .NET platforms






Upcoming

"Acropolis"&#160;· "Jasper"&#160;· Parallel Extensions&#160;· Managed Extensibility Framework






1 Languages that are, will be, or have been included with Visual Studio or Microsoft Windows.
2 Non-academic or research languages with relatively large user-bases.












v&#160;•&#160;d&#160;•&#160;e

Microsoft APIs and frameworks





Graphics

Desktop Window Manager&#160;· Direct2D&#160;· Direct3D (extensions) &#160;· GDI / GDI+&#160;· WPF&#160;· Windows Color System&#160;· Windows Image Acquisition&#160;· Windows Imaging Component






Audio

DirectMusic&#160;· DirectSound&#160;· DirectX plugin&#160;· XACT&#160;· Speech API






Multimedia

DirectX&#160;· (Media Objects&#160;· Video Acceleration)&#160;· DirectInput&#160;· DirectPlay&#160;· DirectShow&#160;· Image Mastering API&#160;· Managed DirectX&#160;· Media Foundation&#160;· XNA&#160;· Windows Media






Web

MSHTML&#160;· RSS Platform&#160;· JScript&#160;· VBScript&#160;· BHO&#160;· XDR&#160;· SideBar Gadgets






Data access

Data Access Components&#160;· Extensible Storage Engine&#160;· ADO.NET&#160;· ADO.NET Entity Framework&#160;· Sync Framework&#160;· Jet Engine&#160;· MSXML&#160;· OLE DB&#160;· OPC






Networking

Winsock (LSP)&#160;· Winsock Kernel&#160;· Filtering Platform&#160;· Network Driver Interface Specification&#160;· Windows Rally&#160;· BITS&#160;· P2P API&#160;· MSMQ&#160;· MS MPI






Communication

Messaging API&#160;· Telephony API&#160;· WCF







Administration and
management


Win32 console&#160;· Windows Script Host&#160;· WMI (extensions)&#160;· PowerShell&#160;· Task Scheduler&#160;· Offline Files&#160;· Shadow Copy&#160;· Windows Installer&#160;· Error Reporting&#160;· Event Log&#160;· Common Log File System






Component model

COM&#160;· COM+&#160;· ActiveX&#160;· Distributed Component Object Model&#160;· .NET Framework






Libraries

Base Class Library (BCL)&#160;· Microsoft Foundation Classes (MFC)&#160;· Active Template Library (ATL)&#160;· Windows Template Library (WTL)






Device drivers

Windows Driver Model &#160;· Windows Driver Foundation (KMDF&#160;· UMDF)&#160;· WDDM&#160;· NDIS&#160;· UAA&#160;· Broadcast Driver Architecture &#160;· VxD






Security

Crypto API (CAPICOM)&#160;· Windows CardSpace&#160;· Data Protection API&#160;· Security Support Provider Interface (SSPI)






.NET

ASP.NET&#160;· ADO.NET&#160;· Base Class Library (BCL)&#160;· Remoting&#160;· Silverlight&#160;· TPL&#160;· WCF&#160;· WCS&#160;· WPF&#160;· WF






Software factories

EFx Factory&#160;· Enterprise Library&#160;· Composite UI&#160;· CCF&#160;· CSF






IPC

MSRPC&#160;· Dynamic Data Exchange (DDE) &#160;· Remoting&#160;· WCF






Accessibility

Active Accessibility&#160;· UI Automation







Text and multilingual
support


DirectWrite&#160;· Text Services Framework&#160;· Text Object Model&#160;· Input method editor&#160;· Language Interface Pack&#160;· Multilingual User Interface&#160;· Uniscribe












Retrieved from "http://en.wikipedia.org/wiki/.NET_Framework"
			Categories: .NET framework | Computing platforms | Microsoft development tools | Microsoft application programming interfacesHidden categories: NPOV disputes from September 2009 | All NPOV disputes | All articles with unsourced statements | Articles with unsourced statements from September 2009			
						
		
	
		
		
	
		Views
		
			
	
				 Article
				 Discussion
				 Edit this page
				 History			
		
	
	
		Personal tools
		
			
				Try Beta
				Log in / create account
			
		
	
	
		
	
	 if (window.isMSIE55) fixalpha(); 
	
		Navigation
		
			
				Main page
				Contents
				Featured content
				Current events
				Random article
			
		
	
	
		Search
		
			
				
				
				&nbsp;
				
			
		
	
	
		Interaction
		
			
				About Wikipedia
				Community portal
				Recent changes
				Contact Wikipedia
				Donate to Wikipedia
				Help
			
		
	
	
		Toolbox
		
			
				What links here
				Related changes
Upload file
Special pages
				Printable version				Permanent linkCite this page			
		
	
	
		Languages
		
			
				Afrikaans
				العربية
				Bosanski
				Български
				Català
				Česky
				Dansk
				Deutsch
				Español
				Euskara
				فارسی
				Français
				한국어
				Hrvatski
				Bahasa Indonesia
				Íslenska
				Italiano
				עברית
				Lietuvių
				Magyar
				Македонски
				Malti
				Nederlands
				日本語
				‪Norsk (bokmål)‬
				Polski
				Português
				Русский
				Slovenščina
				Suomi
				Svenska
				தமிழ்
				ไทย
				Türkçe
				Українська
				O'zbek
				Tiếng Việt
				中文
			
		
	
		
			
			
				
				
			
					 This page was last modified on 15 October 2009 at 14:06.
					Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.
See Terms of Use for details.
Wikipedia&reg; is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
					Privacy policy
					About Wikipedia
					Disclaimers
			
		


if (window.runOnloadHook) runOnloadHook();




Design pattern - Wikipedia, the free encyclopedia


























var skin="monobook",
stylepath="/skins-1.5",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://en.wikipedia.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Design_pattern",
wgTitle="Design pattern",
wgAction="view",
wgArticleId=8745,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=318330006,
wgVersion="1.16alpha-wmf",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Wikipedia", "5": "Wikipedia talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk", "100": "Portal", "101": "Portal talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "wikipedia": 4, "wikipedia_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "portal": 100, "portal_talk": 101, "wp": 4, "wt": 5, "image": 6, "image_talk": 7},
wgMWSuggestTemplate="http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest",
wgDBname="enwiki",
wgSearchNamespaces=[0],
wgMWSuggestMessages=["with suggestions", "no suggestions"],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgNotice="",
wgNoticeLocal="";







	




	
		
	
		
		if (wgNotice != '') document.writeln(wgNotice);		Design pattern
		
			From Wikipedia, the free encyclopedia
			  (Redirected from Design Patterns)
									Jump to: navigation, search			
			For other uses, see Design pattern (disambiguation).
A design pattern in architecture and computer science is a formal way of documenting a solution to a design problem in a particular field of expertise. The idea was introduced by the architect Christopher Alexander in the field of architecture[1] and has been adapted for various other disciplines, including computer science.[2] An organized collection of design patterns that relate to a particular field is called a pattern language.


“
The elements of this language are entities called patterns. Each pattern describes a problem that occurs over and over again in our environment, and then describes the core of the solution to that problem, in such a way that you can use this solution a million times over, without ever doing it the same way twice.
”



—- Christopher Alexander[1]







Contents


1 Overview
2 Domain-specific articles
3 See also
4 References
5 Further reading





//

[edit] Overview
A pattern must explain why a particular situation causes problems, and why the proposed solution is considered a good one. Christopher Alexander describes common design problems as arising from "conflicting forces" -- such as the conflict between wanting a room to be sunny and wanting it not to overheat on summer afternoons. A pattern would not tell the designer how many windows to put in the room; instead, it would propose a set of values to guide the designer toward a decision that is best for their particular application. Alexander, for example, suggests that enough windows should be included to direct light all around the room. He considers this a good solution because he believes it increases the enjoyment of the room by its occupants. Other authors might come to different conclusions, if they place higher value on heating costs, or material costs. These values, used by the pattern's author to determine which solution is "best", must also be documented within the pattern.
A pattern must also explain when it is applicable. Since two houses may be very different from one another, a design pattern for houses must be broad enough to apply to both of them, but not so vague that it doesn't help the designer make decisions. The range of situations in which a pattern can be used is called its context. Some examples might be "all houses", "all two-story houses", or "all places where people spend time." The context must be documented within the pattern.
For instance, in Christopher Alexander's work, bus stops and waiting rooms in a surgery center are both part of the context for the pattern "A PLACE TO WAIT."
[edit] Domain-specific articles

Pattern (architecture), a way of capturing and communicating design ideas in architecture.
Design pattern (computer science), a standard solution to common problems in software design.
Architectural pattern (computer science), a standard solution to architectural problems in software engineering.
Interaction design pattern, used in interaction design / HCI.
Pedagogical patterns, documenting good practices in teaching.

[edit] See also

Anti-pattern
Style guide, repeatable graphic design elements and styles.
Design Patterns: Elements of Reusable Object-Oriented Software, a book about design patterns

[edit] References


^ a b Alexander, A Pattern Language
^ Gamma, 1994, Design Patterns


[edit] Further reading

Alexander, Christopher (1977). A Pattern Language: Towns, Buildings, Construction. Oxford University Press. ISBN 0195019199.&#160;
Frank Buschmann, Kevlin Henney, Douglas C. Schmidt "On Patterns and Pattern Languages"
Gamma, Helm, Johnson &amp; Vlissides (1994). Design Patterns (the Gang of Four book). Addison-Wesley. ISBN 0-201-63361-2.&#160;
Wolfgang Pree. Design Patterns for Object-Oriented Software Development
Jenifer Tidwell. Designing Interfaces







Retrieved from "http://en.wikipedia.org/wiki/Design_pattern"
			Categories: Architectural design | Software design patterns			
						
		
	
		
		
	
		Views
		
			
	
				 Article
				 Discussion
				 Edit this page
				 History			
		
	
	
		Personal tools
		
			
				Try Beta
				Log in / create account
			
		
	
	
		
	
	 if (window.isMSIE55) fixalpha(); 
	
		Navigation
		
			
				Main page
				Contents
				Featured content
				Current events
				Random article
			
		
	
	
		Search
		
			
				
				
				&nbsp;
				
			
		
	
	
		Interaction
		
			
				About Wikipedia
				Community portal
				Recent changes
				Contact Wikipedia
				Donate to Wikipedia
				Help
			
		
	
	
		Toolbox
		
			
				What links here
				Related changes
Upload file
Special pages
				Printable version				Permanent linkCite this page			
		
	
	
		Languages
		
			
				فارسی
				Français
				日本語
				Polski
				ไทย
				Tiếng Việt
				中文
			
		
	
		
			
			
				
				
			
					 This page was last modified on 6 October 2009 at 21:50.
					Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.
See Terms of Use for details.
Wikipedia&reg; is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
					Privacy policy
					About Wikipedia
					Disclaimers
			
		


if (window.runOnloadHook) runOnloadHook();




Groovy - Wikipedia, the free encyclopedia

























var skin="monobook",
stylepath="/skins-1.5",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://en.wikipedia.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Groovy",
wgTitle="Groovy",
wgAction="view",
wgArticleId=4362623,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=316872635,
wgVersion="1.16alpha-wmf",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Wikipedia", "5": "Wikipedia talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk", "100": "Portal", "101": "Portal talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "wikipedia": 4, "wikipedia_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "portal": 100, "portal_talk": 101, "wp": 4, "wt": 5, "image": 6, "image_talk": 7},
wgMWSuggestTemplate="http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest",
wgDBname="enwiki",
wgSearchNamespaces=[0],
wgMWSuggestMessages=["with suggestions", "no suggestions"],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgNotice="",
wgNoticeLocal="";







	




	
		
	
		
		if (wgNotice != '') document.writeln(wgNotice);		Groovy
		
			From Wikipedia, the free encyclopedia
			
									Jump to: navigation, search			
			Groovy is a slang term that gained popular currency during the 1960s and 1970s and which is often associated with the counterculture of that era. It is roughly synonymous with words such as excellent, fashionable, or amazing, depending on context. Groovy originated in the jazz culture of the 1930s, in which it referred to the groove of a piece of music.[1]




Contents


1 Pop music
2 Television shows
3 Computer software
4 References





//

[edit] Pop music

Groovy Kind of Love, a song recorded by several artists
Somebody Groovy, a song recorded by The Mamas and The Papas
Groovy Feeling (Fluke song)
Groovy Times, song by The Clash
Groovy Train, song by The Farm
Groovy Decay, album by Robyn Hitchcock
Groovy Aardvark, a Canadian band
Groovy Rednecks, a Los Angeles-based band
Groovy Little Numbers, a Scottish band
Groovy, by Saliva
The 59th Street Bridge Song (Feelin' Groovy), a song by Simon &amp; Garfunkel
My Old Man's a Groovy Old Man, a song by the Easybeats written by Vanda/Young

[edit] Television shows

Groovy Show a TV program that ran from 1967-1970

Groovy Goolies, characters on the show



[edit] Computer software

Groovy (programming language)
Groovy Server Pages, a presentation language for web application

[edit] References


^ http://www.randomhouse.com/wotd/index.pperl?date=19970530





This disambiguation page lists articles associated with the same title. If an internal link led you here, you may wish to change the link to point directly to the intended article.








Retrieved from "http://en.wikipedia.org/wiki/Groovy"
			Categories: Disambiguation pagesHidden categories: All disambiguation pages | All article disambiguation pages			
						
		
	
		
		
	
		Views
		
			
	
				 Article
				 Discussion
				 Edit this page
				 History			
		
	
	
		Personal tools
		
			
				Try Beta
				Log in / create account
			
		
	
	
		
	
	 if (window.isMSIE55) fixalpha(); 
	
		Navigation
		
			
				Main page
				Contents
				Featured content
				Current events
				Random article
			
		
	
	
		Search
		
			
				
				
				&nbsp;
				
			
		
	
	
		Interaction
		
			
				About Wikipedia
				Community portal
				Recent changes
				Contact Wikipedia
				Donate to Wikipedia
				Help
			
		
	
	
		Toolbox
		
			
				What links here
				Related changes
Upload file
Special pages
				Printable version				Permanent linkCite this page			
		
	
		
			
			
				
				
			
					 This page was last modified on 29 September 2009 at 12:29.
					Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.
See Terms of Use for details.
Wikipedia&reg; is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
					Privacy policy
					About Wikipedia
					Disclaimers
			
		


if (window.runOnloadHook) runOnloadHook();




Ruby (programming language) - Wikipedia, the free encyclopedia

























var skin="monobook",
stylepath="/skins-1.5",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://en.wikipedia.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Ruby_(programming_language)",
wgTitle="Ruby (programming language)",
wgAction="view",
wgArticleId=25768,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=319767130,
wgVersion="1.16alpha-wmf",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Wikipedia", "5": "Wikipedia talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk", "100": "Portal", "101": "Portal talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "wikipedia": 4, "wikipedia_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "portal": 100, "portal_talk": 101, "wp": 4, "wt": 5, "image": 6, "image_talk": 7},
wgMWSuggestTemplate="http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest",
wgDBname="enwiki",
wgSearchNamespaces=[0],
wgMWSuggestMessages=["with suggestions", "no suggestions"],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgNotice="",
wgNoticeLocal="";







	


/**/

/**/
/**/

/**/


	
		
	
		
		if (wgNotice != '') document.writeln(wgNotice);		Ruby (programming language)
		
			From Wikipedia, the free encyclopedia
			
									Jump to: navigation, search			
			
Ruby




Paradigm
multi-paradigm


Appeared in
1995


Designed by
Yukihiro Matsumoto


Developer
Yukihiro Matsumoto, et al.


Stable release
1.9.1-p243 (2009-07-18; 2 months ago)


Preview release
1.9.2 (2009-07-20; 2 months ago)


Typing discipline
dynamic ("duck")


Major implementations
Ruby MRI, JRuby, YARV


Influenced by
Smalltalk, Perl, Lisp, Scheme, Python, CLU, Eiffel, Ada, Dylan, T-RAY


Influenced
Groovy, Nu, Falcon, Ioke


OS
Cross-platform


License
Ruby License
GNU General Public License


Website
www.ruby-lang.org


Ruby is a dynamic, reflective, general purpose object-oriented programming language that combines syntax inspired by Perl with Smalltalk-like features. Ruby originated in Japan during the mid-1990s and was initially developed and designed by Yukihiro "Matz" Matsumoto. It is based on Perl, Smalltalk, Eiffel, Ada, and Lisp.
Ruby supports multiple programming paradigms, including functional, object oriented, imperative and reflective. It also has a dynamic type system and automatic memory management; it is therefore similar in varying respects to Python, Perl, Lisp, Dylan, and CLU.
The standard 1.8.7 implementation is written in C, as a single-pass interpreted language. There is currently no specification of the Ruby language, so the original implementation is considered to be the de facto reference. As of 2008, there are a number of complete or upcoming alternative implementations of the Ruby language, including YARV, JRuby, Rubinius, IronRuby, and MacRuby, each of which takes a different approach, with JRuby and IronRuby providing just-in-time compilation. The official 1.9 branch uses YARV, as will 2.0 (development), and will eventually supersede the slower Ruby MRI.




Contents


1 History

1.1 Etymology of the name "Ruby"
1.2 First publication
1.3 Ruby 1.0
1.4 Ruby 1.9.1


2 Philosophy
3 Features
4 Semantics
5 Syntax
6 Deviations from behaviour elsewhere
7 Interaction
8 Examples

8.1 Strings
8.2 Collections
8.3 Blocks and iterators
8.4 Classes

8.4.1 Open classes


8.5 Exceptions
8.6 Metaprogramming
8.7 More examples


9 Implementations
10 Repositories and libraries
11 See also
12 References
13 Bibliography
14 External links





//

[edit] History




Yukihiro Matsumoto, the creator of Ruby.


Ruby was conceived on February 24, 1993 by Yukihiro Matsumoto who wished to create a new language that balanced functional programming with imperative programming.[1] Matsumoto has stated, "I wanted a scripting language that was more powerful than Perl, and more object-oriented than Python. That's why I decided to design my own language".[2]
[edit] Etymology of the name "Ruby"
The name "Ruby" was decided on during an online chat session between Matsumoto and Keiju Ishitsuka on February 24, 1993, before any code had been written for the language.[3] Initially two names were proposed: "Coral" and "Ruby", with the latter being chosen by Matsumoto in a later email to Ishitsuka.[4] Coral already had a long history as the name of a programming language originating in 1964 at the Royal Radar Establishment in the UK, so it was fortunate that the other name was chosen to eliminate confusion. Matsumoto has later stated that a factor in choosing the name "Ruby" was because it was the birthstone of one of his colleagues.[5]
[edit] First publication
The first public release of Ruby 0.95 was announced on Japanese domestic newsgroups on December 21, 1995.[6][7] Subsequently three more versions of Ruby were released in two days.[3] The release coincided with the launch of the Japanese language ruby-list mailing list which was the first mailing list for the new language.
Already present at this stage of development were many of the features familiar in later releases of Ruby, including object-oriented design, classes with inheritance, mixins, iterators, closures, exception handling, and garbage collection.[8]
[edit] Ruby 1.0
Ruby reached version 1.0 on December 25, 1996.[3]
Following the release of Ruby 1.3 in 1999 the first English language mailing list ruby-talk began,[2] which signalled a growing interest in the language outside of Japan. In September 2000, the first English language book Programming Ruby was printed, which was later freely released to the public further widening the adoption of Ruby amongst English speakers.
[edit] Ruby 1.9.1
As of January 30, 2009, the latest stable version of the reference implementation is 1.9.1.
Ruby 1.9.1 introduces many significant changes over version 1.8.6. Some examples are:

Block local variables (variables that are local to the block in which they are declared)
An additional lambda syntax (fun = -&gt;(a,b) { puts a + b })
Per-string character encodings are supported

[edit] Philosophy
Matsumoto has said that Ruby is designed for programmer productivity and fun, following the principles of good user interface design.[9] He stresses that systems design needs to emphasize human, rather than computer, needs:[10]


“
Often people, especially computer engineers, focus on the machines. They think, "By doing this, the machine will run faster. By doing this, the machine will run more effectively. By doing this, the machine will something something something." They are focusing on machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines. We are the masters. They are the slaves.
”


Ruby is said to follow the principle of least surprise (POLS), meaning that the language should behave in such a way as to minimize confusion for experienced users. Matsumoto has said his primary design goal was to make a language which he himself enjoyed using, by minimizing programmer work and possible confusion. He has said that he had not applied the principle of least surprise to the design of Ruby,[10] but nevertheless the phrase has come to be closely associated with the Ruby programming language. The phrase has itself been a source of surprise, as novice users may take it to mean that Ruby's behaviors try to closely match behaviors familiar from other languages. In a May 2005 discussion on the comp.lang.ruby newsgroup, Matsumoto attempted to distance Ruby from POLS, explaining that because any design choice will be surprising to someone, he uses a personal standard in evaluating surprise. If that personal standard remains consistent there will be few surprises for those familiar with the standard.[11]
Matsumoto defined it this way in an interview[10]:


“
Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only. The principle of least surprise means principle of least my surprise. And it means the principle of least surprise after you learn Ruby very well. For example, I was a C++ programmer before I started designing Ruby. I programmed in C++ exclusively for two or three years. And after two years of C++ programming, it still surprises me.
”


[edit] Features





The neutrality of this section is disputed. Please see the discussion on the talk page. Please do not remove this message until the dispute is resolved. (October 2009)



Deeply object-oriented with inheritance, mixins and metaobjects [12]
Dynamic typing and Duck typing
Everything is an expression (even statements)
Everything is executed imperatively (even declarations)
Reflection, type introspection, and metaprogramming
Dynamic alteration of objects [13]
Succinct and flexible syntax [14] that minimizes syntactic noise and serves as a foundation for domain specific languages [15]
Lexical closures with a unique block syntax [16]
Iterators and generators
First-class continuations
Automatic garbage collection
Regular expression literals and symbol literals
Arrays and Hashes
Keyword arguments and default arguments
Embedding code in strings (interpolation)
Four levels of variable scope: global, class, instance, and local
Uses both sigils and capitalization to denote variable type
Strict boolean coercion rules (everything is true except false and nil)
Exception handling
Operator overloading
Built-in support for rational numbers, complex numbers and arbitrary-precision arithmetic
Custom dispatch behavior (through method_missing and const_missing)
Native threads and cooperative fibers
Full support for Unicode and multiple character encodings (as of version 1.9)
Native extension API in C
Interactive Ruby Shell (a REPL)
Centralized package management through RubyGems
Implemented on all major platforms
Large standard library

[edit] Semantics
Ruby is object-oriented: every data type is an object, including classes and types which many other languages designate as primitives (such as integers, booleans, and "nil"). Every function is a method. Named values (variables) always designate references to objects, not the objects themselves. Ruby supports inheritance with dynamic dispatch, mixins and singleton methods (belonging to, and defined for, a single instance rather than being defined on the class). Though Ruby does not support multiple inheritance, classes can import modules as mixins. Procedural syntax is supported, but all methods defined outside of the scope of a particular object are actually methods of the Object class. Since this class is parent to every other class, the changes become visible to all classes and objects.
Ruby has been described as a multi-paradigm programming language: it allows procedural programming (defining functions/variables outside classes makes them part of the root, 'self' Object), with object orientation (everything is an object) or functional programming (it has anonymous functions, closures, and continuations; statements all have values, and functions return the last evaluation). It has support for introspection, reflection and metaprogramming, as well as support for interpreter-based[17] threads. Ruby features dynamic typing, and supports parametric polymorphism.
According to the Ruby FAQ,[18] "If you like Perl, you will like Ruby and be right at home with its syntax. If you like Smalltalk, you will like Ruby and be right at home with its semantics. If you like Python, you may or may not be put off by the huge difference in design philosophy between Python and Ruby/Perl."[19]
[edit] Syntax
The syntax of Ruby is broadly similar to Perl and Python. Class and method definitions are signaled by keywords. In contrast to Perl, variables are not obligatorily prefixed with a sigil. When used, the sigil changes the semantics of scope of the variable. The most striking difference from C and Perl is that keywords are typically used to define logical code blocks, without braces (i.e., pair of { and }). For practical purposes there is no distinction between expressions and statements[20]. Line breaks are significant and taken as the end of a statement; a semicolon may be equivalently used. Unlike Python, indentation is not significant.
One of the differences of Ruby compared to Python and Perl is that Ruby keeps all of its instance variables completely private to the class and only exposes them through accessor methods (attr_writer, attr_reader, etc). Unlike the "getter" and "setter" methods of other languages like C++ or Java, accessor methods in Ruby are created with a single line of code via metaprogramming. As invocation of these methods does not require the use of parentheses, it is trivial to change an instance variable into a full function, without modifying a single line of code or having to do any refactoring achieving similar functionality to C# and VB.NET property members. Python's property descriptors are similar, but come with a tradeoff in the development process. If one begins in Python by using a publicly exposed instance variable and later changes the implementation to use a private instance variable exposed through a property descriptor, code internal to the class may need to be adjusted to use the private variable rather than the public property. Ruby removes this design decision by forcing all instance variables to be private, but also provides a simple way to declare set and get methods. This is in keeping with the idea that in Ruby, one never directly accesses the internal members of a class from outside of it. Rather one passes a message to the class and receives a response.
See the examples section for samples of code demonstrating Ruby syntax.
[edit] Deviations from behaviour elsewhere
Some features which differ notably from languages such as C or Perl:

The language syntax is sensitive to the capitalization of identifiers, in most cases treating capitalized variables as constants.
The sigils $ and @ do not indicate variable data type as in Perl, but rather function as scope resolution operators.
To denote a floating point without a decimal component, one must follow with a zero digit (99.0) or an explicit conversion (99.to_f). It is insufficient to append a dot (99.) since numbers are susceptible to method syntax.
Boolean evaluation of non-boolean data is strict: 0, "" and [] are all evaluated to true. In C, the expression 0&#160;? 1&#160;: 0 evaluates to 0 (i.e. false). In Ruby, however, it yields 1, as all numbers evaluate to true; only nil and false evaluate to false. A corollary to this rule is that Ruby methods by convention — for example, regular-expression searches — return numbers, strings, lists, or other non-false values on success, but nil on failure. This convention is also used in Smalltalk, where only the special objects true and false can be used in a boolean expression.
Versions prior to 1.9 use plain integers to represent single characters, much like C. This may cause surprises when slicing strings: "abc"[0] yields 97 (the ASCII code of the first character in the string); to obtain "a" use "abc"[0,1] (a substring of length 1) or "abc"[0].chr.
The notation statement until expression, unlike other languages' equivalent statements (e.g. do { statement } while (!(expression)); in C/C++/...), actually never runs the statement if the expression is already true. This is because statement until expression is actually syntactic sugar over until expression; statement; end, the equivalent of which in C/C++ is while (!(expression)) { statement; }, just like statement if expression is an equivalent to if (expression) { statement; }. However, the notation begin statement end until expression in Ruby will in fact run the statement once even if the expression is already true, acting similar to the "do-while" of other languages.
Because constants are references to objects, changing what a constant refers to generates a warning, but modifying the object itself does not. For example, Greeting &lt;&lt; " world!" if Greeting == "Hello" does not generate an error or warning. This is similar to final variables in Java or a const pointer to a non-const object in C++, but Ruby provides the functionality to "freeze" an object, unlike Java or C++.

Some features which differ notably from other languages:

The usual operators for conditional expressions, and and or, do not follow the normal rules of precedence: and does not bind tighter than or. Ruby also has expression operators || and &amp;&amp; which work as expected.

A list of so-called gotchas may be found in Hal Fulton's book The Ruby Way, 2nd ed (ISBN 0-672-32884-4), Section 1.5. A similar list in the 1st edition pertained to an older version of Ruby (version 1.6), some problems of which have been fixed in the meantime. retry, for example, now works with while, until, and for, as well as iterators.
[edit] Interaction
See also: Interactive Ruby Shell
The Ruby official distribution also includes "irb", an interactive command-line interpreter which can be used to test code quickly. The following code fragment represents a sample session using irb:



$ irb
irb(main):001:0&gt; puts "Hello, World"
Hello, World
=&gt; nil
irb(main):002:0&gt; 1+2
=&gt; 3


[edit] Examples
The following examples can be run in a Ruby shell such as Interactive Ruby Shell or saved in a file and run from the command line by typing ruby &lt;filename&gt;.
Classic Hello world example:



puts "Hello World!"


Some basic Ruby code:



# Everything, including a literal, is an object, so this works:
-199.abs                                                # 199
"ruby is cool".length                                   # 12
"Your mother is nice.".index("u")                       # 2
"Nice Day Isn't It?".downcase.split("").sort.uniq.join  # " '?acdeinsty"


Conversions:



puts "What's your favorite number?"
number = gets.chomp
output_number = number.to_i + 1
puts output_number.to_s + ' is a bigger and better favorite number.'


[edit] Strings
There are a variety of methods of defining strings in Ruby
The below conventions are equivalent for double quoted strings:



a = "\nThis is a double quoted string\n"
a = %{\nThis is a double quoted string\n}
a = %Q{\nThis is a double quoted string\n}
a = &lt;&lt;BLOCK
 
This is a multi-line double quoted string
BLOCK
a = %/\nThis is a double quoted string\n/


The below conventions are equivalent for single quoted strings:



a = 'This is a single quoted string'
a = %q{This is a single quoted string}


[edit] Collections
Constructing and using an array:



a = [1, 'hi', 3.14, 1, 2, [4, 5]]
 
puts a[2]           # 3.14
puts a.[](2)        # 3.14
puts a.reverse      # [[4, 5], 2, 1, 3.14, 'hi', 1]
puts a.flatten.uniq # [1, 'hi', 3.14, 2, 4, 5]


Constructing and using an associative array:



hash = { :water =&gt; 'wet', :fire =&gt; 'hot' }
puts hash[:fire] # Prints:  hot
 
hash.each_pair do |key, value| # Or:  hash.each do |key, value|
  puts "#{key} is #{value}"
end
 
# Prints:  water is wet
#          fire is hot
 
hash.delete :water # Deletes :water =&gt; 'wet'
hash.delete_if {|key,value| value=='hot'} # Deletes :fire =&gt; 'hot'


[edit] Blocks and iterators
The two syntaxes for creating a code block:



{ puts "Hello, World!" } # Note the { braces }
#or
do puts "Hello, World!" end


When a code block is created it is always attached to a method as an optional block argument.
Parameter-passing a block to be a closure:



# In an object instance variable (denoted with '@'), remember a block.
def remember(&amp;a_block)
  @block = a_block
end
 
# Invoke the above method, giving it a block which takes a name.
remember {|name| puts "Hello, #{name}!"}
 
# When the time is right (for the object) -- call the closure!
@block.call("Jon")
# =&gt; "Hello, Jon!"


Creating an anonymous function:



proc {|arg| print arg}
Proc.new {|arg| print arg}
lambda {|arg| print arg}


Returning closures from a method:



def create_set_and_get(initial_value=0) # Note the default value of 0
  closure_value = initial_value
  return Proc.new {|x| closure_value = x}, Proc.new { closure_value }
end
 
setter, getter = create_set_and_get  # ie. returns two values
setter.call(21)
getter.call # =&gt; 21
 
#You can also use a parameter variable as a binding for the closure. 
#So the above can be rewritten as...
 
def create_set_and_get(closure_value=0)
  proc {|x| closure_value = x } , proc { closure_value }
end


Yielding the flow of program control to a block which was provided at calling time:



def use_hello
  yield "hello"
end
 
# Invoke the above method, passing it a block.
use_hello {|string| puts string} # =&gt; 'hello'


Iterating over enumerations and arrays using blocks:



array = [1, 'hi', 3.14]
array.each {|item| puts item }
# =&gt; 1
# =&gt; 'hi'
# =&gt; 3.14
 
array.each_index {|index| puts "#{index}: #{array[index]}" }
# =&gt; 0: 1
# =&gt; 1: 'hi'
# =&gt; 2: 3.14
 
(3..6).each {|num| puts num }
# =&gt; 3
# =&gt; 4
# =&gt; 5
# =&gt; 6


A method such as inject() can accept both a parameter and a block. Inject iterates over each member of a list, performing some function on while retaining an aggregate. This is analogous to the foldl function in functional programming languages. For example:



[1,3,5].inject(10) {|sum, element| sum + element} # =&gt; 19


On the first pass, the block receives 10 (the argument to inject) as sum, and 1 (the first element of the array) as element; this returns 11. 11 then becomes sum on the next pass, which is added to 3 to get 14. 14 is then added to 5, to finally return 19.
Blocks work with many built-in methods:



File.open('file.txt', 'w') do |file| # 'w' denotes "write mode".
  file.puts 'Wrote some text.'
end                                  # File is automatically closed here
 
File.readlines('file.txt').each do |line|
  puts line
end
# =&gt; Wrote some text.


Using an enumeration and a block to square the numbers 1 to 10:



(1..10).collect {|x| x*x} # =&gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]


[edit] Classes
The following code defines a class named Person. In addition to 'initialize', the usual constructor to create new objects, it has two methods: one to override the &lt;=&gt; comparison operator (so Array#sort can sort by age) and the other to override the to_s method (so Kernel#puts can format its output). Here, "attr_reader" is an example of metaprogramming in Ruby: "attr_accessor" defines getter and setter methods of instance variables, "attr_reader" only getter methods. Also, the last evaluated statement in a method is its return value, allowing the omission of an explicit 'return'.



class Person
  attr_reader :name, :age
  def initialize(name, age)
    @name, @age = name, age
  end
  def &lt;=&gt;(person) # Comparison operator for sorting
    @age &lt;=&gt; person.age
  end
  def to_s
    "#@name (#@age)"
  end
end
 
group = [
  Person.new("Bob", 33), 
  Person.new("Chris", 16), 
  Person.new("Ash", 23) 
]
 
puts group.sort.reverse


The above prints three names in reverse age order:



Bob (33)
Ash (23)
Chris (16)


[edit] Open classes
In Ruby, classes are never closed: you can always add methods to an existing class. This applies to the classes you write as well as the standard, built-in classes. All you have to do is open up a class definition for an existing class, and the new contents you specify will be added to whatever's there. A simple example of adding a new method to the standard library's Time class:



# re-open Ruby's Time class
class Time
  def yesterday
    self - 86400
  end
end
 
today = Time.now # =&gt; Thu Aug 14 16:51:50 +1200 2008
yesterday = today.yesterday # =&gt; Wed Aug 13 16:51:50 +1200 2008


Adding methods to previously defined classes is often called monkey-patching. This practice, however, can lead to possible collisions of behavior and subsequent unexpected results, and is a concern for code scalability if performed recklessly.
[edit] Exceptions
An exception is raised with a raise call:



raise


An optional message can be added to the exception:



raise "This is a message"


You can also specify which type of exception you want to raise:



raise ArgumentError, "Illegal arguments!"


Alternatively, you can pass an exception instance to the raise method:



raise ArgumentError.new("Illegal arguments!")


This last construct is useful when you need to raise a custom exception class featuring a constructor which takes more than one argument:



class ParseError &lt; Exception
  def initialize input, line, pos
    super "Could not parse '#{input}' at line #{line}, position #{pos}"
  end
end
 
raise ParseError.new("Foo", 3, 9)


Exceptions are handled by the rescue clause. Such a clause can catch exceptions which inherit from StandardError. Also supported for use with exceptions are else and ensure



begin
# Do something
rescue
# Handle exception
else
# Do this if no exception was raised
ensure
# Do this whether or not an exception was raised
end


It is a common mistake to attempt to catch all exceptions with a simple rescue clause. To catch all exceptions one must write:



begin
# Do something
rescue Exception # don't write just rescue -- that only catches StandardError, a subclass of Exception
# Handle exception
end


Or catch particular exceptions:



begin
# ...
rescue RuntimeError 
# handling
end


It is also possible to specify that the exception object be made available to the handler clause:



begin
# ...
rescue RuntimeError =&gt; e
# handling, possibly involving e, such as "print e.to_s"
end


Alternatively, the most recent exception is stored in the magic global $!.
You can also catch several exceptions:



begin
# ...
rescue RuntimeError, Timeout::Error =&gt; e
# handling, possibly involving e
end


[edit] Metaprogramming
Ruby provides a programmer the ability to add to or modify methods in the language's standard library during runtime, as well for a Ruby program to modify itself during its operation without generating source code, techniques known as metaprogramming.
[edit] More examples
More sample Ruby code is available as algorithms in the following articles:

Exponentiating by squaring
Trabb Pardo-Knuth algorithm

[edit] Implementations
See also: Ruby MRI#Operating systems
The newest version of Ruby, the recently released version 1.9, has a single working implementation written in C that utilizes a Ruby-specific virtual machine.
Ruby version 1.8 has two main implementations: The official Ruby interpreter often referred to as the Matz's Ruby Interpreter or MRI, which is the most widely used, and JRuby, a Java-based implementation that runs on the Java Virtual Machine.
There are other less-known or upcoming implementations such as Cardinal (an implementation for the Parrot virtual machine), IronRuby (alpha version available since July 24, 2008[21]), MacRuby (0.5 experimental), MagLev, Rubinius, Ruby.NET, XRuby,
The maturity of Ruby implementations tends to be measured by their ability to run Rails (because this is a complex framework to implement, and it uses a lot of Ruby-specific features). The point when a particular implementation achieves this goal is called The Rails singularity. As of January 2009, only the reference implementation (MRI) and JRuby are able to run Rails unmodified in a production environment.[22] IronRuby[23][24] and Rubinius[25] start to be able to run Rails test cases, but they still are far from production-ready for this task.
Ruby is available on many operating systems such as Linux, Mac OS X, Microsoft Windows, Windows CE and most flavors of Unix.
Ruby 1.9 has recently been ported onto Symbian OS 9.x[26].
[edit] Repositories and libraries
The Ruby Application Archive (RAA), as well as RubyForge, serve as repositories for a wide range of Ruby applications and libraries, containing more than seven thousand items. Although the number of applications available does not match the volume of material available in the Perl or Python community, there are a wide range of tools and utilities which serve to foster further development in the language.
RubyGems has become the standard package manager for Ruby libraries. It is very similar in purpose to Perl's CPAN, although its usage is more like apt-get.
Recently, many new and existing libraries have found a home on Github, which is focused on Git and has native support for RubyGems packaging, but not for long.[6]
[edit] See also




Free software portal




Duck typing
Comparison of programming languages
Ruby MRI, the reference C implementation
JRuby
MacRuby
IronRuby
Rubinius
XRuby
Ruby on Rails

[edit] References


^ http://www.ruby-lang.org/en/about/ Ruby-Lang About Ruby
^ a b http://www.linuxdevcenter.com/pub/a/linux/2001/11/29/ruby.html An Interview with the Creator of Ruby
^ a b c http://blog.nicksieger.com/articles/2006/10/20/rubyconf-history-of-ruby History of Ruby
^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/88819 "[FYI: historic] The decisive moment of the language name Ruby. (Re: [ANN] ruby 1.8.1)" - Email from Hiroshi Sugihara to ruby-talk
^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/394 "Re: the name of Ruby?" - Email from Yukihiro Matsumoto to ruby-talk
^ http://eigenclass.org/hiki/ruby+0.95 More archeolinguistics: unearthing proto-Ruby
^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/382 "Re: history of ruby" - Email from Yukihiro Matsumoto to ruby-talk
^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/124 "TUTORIAL - ruby's features" - Email From Yukihiro Matsumoto to ruby-list
^ The Ruby Programming Language by Yukihiro Matsumoto on 2000-06-12 (informit.com)
^ a b c The Philosophy of Ruby, A Conversation with Yukihiro Matsumoto, Part I by Bill Venners on 2003-09-29 (Artima Developer)
^ Ruby Weekly News 23rd - 29th May 2005
^ [1]
^ [2]
^ [3]
^ [4]
^ [5]
^ Green threads
^ Ruby FAQ
^ How Does Ruby Compare With Python? (FAQ)
^ In Ruby's syntax, statement is just a special case of an expression which cannot appear as an argument (e.g. multiple assignment). http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/1120
statement [...] can not be part of expression unless grouped within parentheses. http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2460
^ Lam, John (2008-07-24). "IronRuby at OSCON". http://www.iunknown.com/2008/07/ironruby-at-oscon.html. Retrieved 2008-08-04.  "We’re shipping our first binary release. In this package, we’re taking a “batteries included” approach and shipping the Ruby standard libraries in it"&#160;
^ Charles Nutter (2008-04-27). "Promise and Peril for Alternative Ruby Impls". http://headius.blogspot.com/2008/04/promise-and-peril-for-alternative-ruby.html. Retrieved 2008-06-01.&#160;
^ John Lam (2008-05-25). "IronRuby / Rails Question". http://rubyforge.org/pipermail/ironruby-core/2008-May/001909.html. Retrieved 2008-05-25.&#160;
^ John Lam (2008-05-30). "IronRuby and Rails". http://www.iunknown.com/2008/05/ironruby-and-rails.html. Retrieved 2008-06-01.&#160;
^ Evan Phoenix (2008-05-17). "Rails on Rubinius". http://blog.fallingsnow.net/2008/05/17/rails-on-rubinius/. Retrieved 2008-05-25.&#160;
^ "Ruby 1.9 for Symbian OS". http://www.pragmaticomm.com/MobileRuby. Retrieved 2008-12-03.&#160;


[edit] Bibliography


McAnally, Jeremy; Arkin, Assaf (March 28, 2009), Ruby in Practice (First ed.), Manning Publications, pp.&#160;360, ISBN 1933988479, http://www.manning.com/mcanally/&#160;
Thomas, Dave; Fowler, Chad; Hunt, Andy (April 28, 2009), Programming Ruby 1.9: The Pragmatic Programmers' Guide (Third ed.), Pragmatic Bookshelf, pp.&#160;1000, ISBN 1934356085, http://pragprog.com/titles/ruby3/programming-ruby-1-9&#160;
Flanagan, David; Matsumoto, Yukihiro (January 25, 2008), The Ruby Programming Language (First ed.), O'Reilly Media, pp.&#160;446, ISBN 0596516177, http://oreilly.com/catalog/9780596516178/&#160;
Baird, Kevin (June 8, 2007), Ruby by Example: Concepts and Code (First ed.), No Starch Press, pp.&#160;326, ISBN 1593271484, http://nostarch.com/ruby.htm&#160;
Fitzgerald, Michael (May 14, 2007), Learning Ruby (First ed.), O'Reilly Media, pp.&#160;255, ISBN 0596529864, http://oreilly.com/catalog/9780596529864&#160;
Cooper, Peter (March 26, 2007), Beginning Ruby: From Novice to Professional (First ed.), Apress, pp.&#160;664, ISBN 1590597664, http://apress.com/book/view/9781590597668&#160;
Fulton, Hal (November 4, 2006), The Ruby Way (Second ed.), Addison-Wesley Professional, pp.&#160;888, ISBN 0596523696, http://www.informit.com/store/product.aspx?isbn=0672328844&#160;
Carlson, Lucas; Richardson, Leonard (July 19, 2006), Ruby Cookbook (First ed.), O'Reilly Media, pp.&#160;906, ISBN 0596523696, http://oreilly.com/catalog/9780596523695/&#160;


[edit] External links



Wikibooks has a book on the topic of
Ruby Programming






Wikiversity has learning materials about Topic:Ruby



Ruby language home page
Ruby documentation site
The Great Ruby Shootout (December 2008): Ruby implementations comparison.
Collingbourne, Huw (June 17 2006), The Little Book Of Ruby, free PDF eBook 1.1MB, pp. 87
Collingbourne, Huw (April 18 2009), The Book Of Ruby, free PDF eBook 2.9MB, pp. 425
Ruby.on-page.net — simple Ruby manual with many samples
[7] - an online ruby textbook in graphic novel format
Ruby at the Open Directory Project
Ruby User Guide By Matz, the creator of Ruby. Translated into English.
Ruby From Other Languages
Wiki: Ruby language and implementation specification (Dead link - 2009.08.10)
Writing C Extensions to Ruby (MRI 1.8)
RubyFlow: Community Filtered Ruby News








v&#160;•&#160;d&#160;•&#160;e

Ruby programming language





IDE

Netbeans&#160;· RubyForge&#160;· RadRails&#160;· RubyMine






Implementations

Ruby MRI&#160;· YARV&#160;· JRuby&#160;· IronRuby&#160;· Rubinius&#160;· XRuby&#160;· MacRuby






Applications

RubyGems&#160;· Rake&#160;· Interactive Ruby Shell&#160;· Capistrano&#160;· SketchUp Ruby






Libraries / Frameworks

Adhearsion&#160;· Camping&#160;· eRuby (RHTML)&#160;· Merb&#160;· Nitro&#160;· RubyCocoa&#160;· Ruby on Rails&#160;· Sinatra






Server Software

Mongrel&#160;· Phusion Passenger (mod_rails/mod_rack)&#160;· WEBrick&#160;· mod_ruby






Other

Application Archives&#160;· Document format&#160;· Book Guides&#160;· Ruby Central&#160;· Hackety Hack






Category











Retrieved from "http://en.wikipedia.org/wiki/Ruby_(programming_language)"
			Categories: Class-based programming languages | Dynamically-typed programming languages | Scripting languages | Object-oriented programming languages | Curly bracket programming languages | Articles with example Ruby code | Ruby programming languageHidden categories: NPOV disputes from October 2009 | All NPOV disputes			
						
		
	
		
		
	
		Views
		
			
	
				 Article
				 Discussion
				 Edit this page
				 History			
		
	
	
		Personal tools
		
			
				Try Beta
				Log in / create account
			
		
	
	
		
	
	 if (window.isMSIE55) fixalpha(); 
	
		Navigation
		
			
				Main page
				Contents
				Featured content
				Current events
				Random article
			
		
	
	
		Search
		
			
				
				
				&nbsp;
				
			
		
	
	
		Interaction
		
			
				About Wikipedia
				Community portal
				Recent changes
				Contact Wikipedia
				Donate to Wikipedia
				Help
			
		
	
	
		Toolbox
		
			
				What links here
				Related changes
Upload file
Special pages
				Printable version				Permanent linkCite this page			
		
	
	
		Languages
		
			
				العربية
				বাংলা
				Български
				Català
				Česky
				Dansk
				Deutsch
				Español
				Esperanto
				Euskara
				فارسی
				Français
				Galego
				한국어
				Hrvatski
				Bahasa Indonesia
				Interlingua
				Italiano
				עברית
				ქართული
				Lietuvių
				Magyar
				Bahasa Melayu
				မြန်မာဘာသာ
				Nederlands
				日本語
				‪Norsk (bokmål)‬
				‪Norsk (nynorsk)‬
				Polski
				Português
				Română
				Русский
				Slovenčina
				Soranî / کوردی
				Српски / Srpski
				Suomi
				Svenska
				தமிழ்
				ไทย
				Тоҷикӣ
				Türkçe
				Українська
				Tiếng Việt
				粵語
				Žemaitėška
				中文
			
		
	
		
			
			
				
				
			
					 This page was last modified on 14 October 2009 at 06:29.
					Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.
See Terms of Use for details.
Wikipedia&reg; is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
					Privacy policy
					About Wikipedia
					Disclaimers
			
		


if (window.runOnloadHook) runOnloadHook();




Ruby (programming language) - Wikipedia, the free encyclopedia


























var skin="monobook",
stylepath="/skins-1.5",
wgArticlePath="/wiki/$1",
wgScriptPath="/w",
wgScriptExtension=".php",
wgScript="/w/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://en.wikipedia.org",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="Ruby_(programming_language)",
wgTitle="Ruby (programming language)",
wgAction="view",
wgArticleId=25768,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=319767130,
wgVersion="1.16alpha-wmf",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Wikipedia", "5": "Wikipedia talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk", "100": "Portal", "101": "Portal talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "wikipedia": 4, "wikipedia_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "portal": 100, "portal_talk": 101, "wp": 4, "wt": 5, "image": 6, "image_talk": 7},
wgMWSuggestTemplate="http://en.wikipedia.org/w/api.php?action=opensearch\x26search={searchTerms}\x26namespace={namespaces}\x26suggest",
wgDBname="enwiki",
wgSearchNamespaces=[0],
wgMWSuggestMessages=["with suggestions", "no suggestions"],
wgRestrictionEdit=[],
wgRestrictionMove=[],
wgNotice="",
wgNoticeLocal="";







	


/**/

/**/
/**/

/**/


	
		
	
		
		if (wgNotice != '') document.writeln(wgNotice);		Ruby (programming language)
		
			From Wikipedia, the free encyclopedia
			  (Redirected from Ruby programming language)
									Jump to: navigation, search			
			
Ruby




Paradigm
multi-paradigm


Appeared in
1995


Designed by
Yukihiro Matsumoto


Developer
Yukihiro Matsumoto, et al.


Stable release
1.9.1-p243 (2009-07-18; 2 months ago)


Preview release
1.9.2 (2009-07-20; 2 months ago)


Typing discipline
dynamic ("duck")


Major implementations
Ruby MRI, JRuby, YARV


Influenced by
Smalltalk, Perl, Lisp, Scheme, Python, CLU, Eiffel, Ada, Dylan, T-RAY


Influenced
Groovy, Nu, Falcon, Ioke


OS
Cross-platform


License
Ruby License
GNU General Public License


Website
www.ruby-lang.org


Ruby is a dynamic, reflective, general purpose object-oriented programming language that combines syntax inspired by Perl with Smalltalk-like features. Ruby originated in Japan during the mid-1990s and was initially developed and designed by Yukihiro "Matz" Matsumoto. It is based on Perl, Smalltalk, Eiffel, Ada, and Lisp.
Ruby supports multiple programming paradigms, including functional, object oriented, imperative and reflective. It also has a dynamic type system and automatic memory management; it is therefore similar in varying respects to Python, Perl, Lisp, Dylan, and CLU.
The standard 1.8.7 implementation is written in C, as a single-pass interpreted language. There is currently no specification of the Ruby language, so the original implementation is considered to be the de facto reference. As of 2008, there are a number of complete or upcoming alternative implementations of the Ruby language, including YARV, JRuby, Rubinius, IronRuby, and MacRuby, each of which takes a different approach, with JRuby and IronRuby providing just-in-time compilation. The official 1.9 branch uses YARV, as will 2.0 (development), and will eventually supersede the slower Ruby MRI.




Contents


1 History

1.1 Etymology of the name "Ruby"
1.2 First publication
1.3 Ruby 1.0
1.4 Ruby 1.9.1


2 Philosophy
3 Features
4 Semantics
5 Syntax
6 Deviations from behaviour elsewhere
7 Interaction
8 Examples

8.1 Strings
8.2 Collections
8.3 Blocks and iterators
8.4 Classes

8.4.1 Open classes


8.5 Exceptions
8.6 Metaprogramming
8.7 More examples


9 Implementations
10 Repositories and libraries
11 See also
12 References
13 Bibliography
14 External links





//

[edit] History




Yukihiro Matsumoto, the creator of Ruby.


Ruby was conceived on February 24, 1993 by Yukihiro Matsumoto who wished to create a new language that balanced functional programming with imperative programming.[1] Matsumoto has stated, "I wanted a scripting language that was more powerful than Perl, and more object-oriented than Python. That's why I decided to design my own language".[2]
[edit] Etymology of the name "Ruby"
The name "Ruby" was decided on during an online chat session between Matsumoto and Keiju Ishitsuka on February 24, 1993, before any code had been written for the language.[3] Initially two names were proposed: "Coral" and "Ruby", with the latter being chosen by Matsumoto in a later email to Ishitsuka.[4] Coral already had a long history as the name of a programming language originating in 1964 at the Royal Radar Establishment in the UK, so it was fortunate that the other name was chosen to eliminate confusion. Matsumoto has later stated that a factor in choosing the name "Ruby" was because it was the birthstone of one of his colleagues.[5]
[edit] First publication
The first public release of Ruby 0.95 was announced on Japanese domestic newsgroups on December 21, 1995.[6][7] Subsequently three more versions of Ruby were released in two days.[3] The release coincided with the launch of the Japanese language ruby-list mailing list which was the first mailing list for the new language.
Already present at this stage of development were many of the features familiar in later releases of Ruby, including object-oriented design, classes with inheritance, mixins, iterators, closures, exception handling, and garbage collection.[8]
[edit] Ruby 1.0
Ruby reached version 1.0 on December 25, 1996.[3]
Following the release of Ruby 1.3 in 1999 the first English language mailing list ruby-talk began,[2] which signalled a growing interest in the language outside of Japan. In September 2000, the first English language book Programming Ruby was printed, which was later freely released to the public further widening the adoption of Ruby amongst English speakers.
[edit] Ruby 1.9.1
As of January 30, 2009, the latest stable version of the reference implementation is 1.9.1.
Ruby 1.9.1 introduces many significant changes over version 1.8.6. Some examples are:

Block local variables (variables that are local to the block in which they are declared)
An additional lambda syntax (fun = -&gt;(a,b) { puts a + b })
Per-string character encodings are supported

[edit] Philosophy
Matsumoto has said that Ruby is designed for programmer productivity and fun, following the principles of good user interface design.[9] He stresses that systems design needs to emphasize human, rather than computer, needs:[10]


“
Often people, especially computer engineers, focus on the machines. They think, "By doing this, the machine will run faster. By doing this, the machine will run more effectively. By doing this, the machine will something something something." They are focusing on machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines. We are the masters. They are the slaves.
”


Ruby is said to follow the principle of least surprise (POLS), meaning that the language should behave in such a way as to minimize confusion for experienced users. Matsumoto has said his primary design goal was to make a language which he himself enjoyed using, by minimizing programmer work and possible confusion. He has said that he had not applied the principle of least surprise to the design of Ruby,[10] but nevertheless the phrase has come to be closely associated with the Ruby programming language. The phrase has itself been a source of surprise, as novice users may take it to mean that Ruby's behaviors try to closely match behaviors familiar from other languages. In a May 2005 discussion on the comp.lang.ruby newsgroup, Matsumoto attempted to distance Ruby from POLS, explaining that because any design choice will be surprising to someone, he uses a personal standard in evaluating surprise. If that personal standard remains consistent there will be few surprises for those familiar with the standard.[11]
Matsumoto defined it this way in an interview[10]:


“
Everyone has an individual background. Someone may come from Python, someone else may come from Perl, and they may be surprised by different aspects of the language. Then they come up to me and say, 'I was surprised by this feature of the language, so Ruby violates the principle of least surprise.' Wait. Wait. The principle of least surprise is not for you only. The principle of least surprise means principle of least my surprise. And it means the principle of least surprise after you learn Ruby very well. For example, I was a C++ programmer before I started designing Ruby. I programmed in C++ exclusively for two or three years. And after two years of C++ programming, it still surprises me.
”


[edit] Features





The neutrality of this section is disputed. Please see the discussion on the talk page. Please do not remove this message until the dispute is resolved. (October 2009)



Deeply object-oriented with inheritance, mixins and metaobjects [12]
Dynamic typing and Duck typing
Everything is an expression (even statements)
Everything is executed imperatively (even declarations)
Reflection, type introspection, and metaprogramming
Dynamic alteration of objects [13]
Succinct and flexible syntax [14] that minimizes syntactic noise and serves as a foundation for domain specific languages [15]
Lexical closures with a unique block syntax [16]
Iterators and generators
First-class continuations
Automatic garbage collection
Regular expression literals and symbol literals
Arrays and Hashes
Keyword arguments and default arguments
Embedding code in strings (interpolation)
Four levels of variable scope: global, class, instance, and local
Uses both sigils and capitalization to denote variable type
Strict boolean coercion rules (everything is true except false and nil)
Exception handling
Operator overloading
Built-in support for rational numbers, complex numbers and arbitrary-precision arithmetic
Custom dispatch behavior (through method_missing and const_missing)
Native threads and cooperative fibers
Full support for Unicode and multiple character encodings (as of version 1.9)
Native extension API in C
Interactive Ruby Shell (a REPL)
Centralized package management through RubyGems
Implemented on all major platforms
Large standard library

[edit] Semantics
Ruby is object-oriented: every data type is an object, including classes and types which many other languages designate as primitives (such as integers, booleans, and "nil"). Every function is a method. Named values (variables) always designate references to objects, not the objects themselves. Ruby supports inheritance with dynamic dispatch, mixins and singleton methods (belonging to, and defined for, a single instance rather than being defined on the class). Though Ruby does not support multiple inheritance, classes can import modules as mixins. Procedural syntax is supported, but all methods defined outside of the scope of a particular object are actually methods of the Object class. Since this class is parent to every other class, the changes become visible to all classes and objects.
Ruby has been described as a multi-paradigm programming language: it allows procedural programming (defining functions/variables outside classes makes them part of the root, 'self' Object), with object orientation (everything is an object) or functional programming (it has anonymous functions, closures, and continuations; statements all have values, and functions return the last evaluation). It has support for introspection, reflection and metaprogramming, as well as support for interpreter-based[17] threads. Ruby features dynamic typing, and supports parametric polymorphism.
According to the Ruby FAQ,[18] "If you like Perl, you will like Ruby and be right at home with its syntax. If you like Smalltalk, you will like Ruby and be right at home with its semantics. If you like Python, you may or may not be put off by the huge difference in design philosophy between Python and Ruby/Perl."[19]
[edit] Syntax
The syntax of Ruby is broadly similar to Perl and Python. Class and method definitions are signaled by keywords. In contrast to Perl, variables are not obligatorily prefixed with a sigil. When used, the sigil changes the semantics of scope of the variable. The most striking difference from C and Perl is that keywords are typically used to define logical code blocks, without braces (i.e., pair of { and }). For practical purposes there is no distinction between expressions and statements[20]. Line breaks are significant and taken as the end of a statement; a semicolon may be equivalently used. Unlike Python, indentation is not significant.
One of the differences of Ruby compared to Python and Perl is that Ruby keeps all of its instance variables completely private to the class and only exposes them through accessor methods (attr_writer, attr_reader, etc). Unlike the "getter" and "setter" methods of other languages like C++ or Java, accessor methods in Ruby are created with a single line of code via metaprogramming. As invocation of these methods does not require the use of parentheses, it is trivial to change an instance variable into a full function, without modifying a single line of code or having to do any refactoring achieving similar functionality to C# and VB.NET property members. Python's property descriptors are similar, but come with a tradeoff in the development process. If one begins in Python by using a publicly exposed instance variable and later changes the implementation to use a private instance variable exposed through a property descriptor, code internal to the class may need to be adjusted to use the private variable rather than the public property. Ruby removes this design decision by forcing all instance variables to be private, but also provides a simple way to declare set and get methods. This is in keeping with the idea that in Ruby, one never directly accesses the internal members of a class from outside of it. Rather one passes a message to the class and receives a response.
See the examples section for samples of code demonstrating Ruby syntax.
[edit] Deviations from behaviour elsewhere
Some features which differ notably from languages such as C or Perl:

The language syntax is sensitive to the capitalization of identifiers, in most cases treating capitalized variables as constants.
The sigils $ and @ do not indicate variable data type as in Perl, but rather function as scope resolution operators.
To denote a floating point without a decimal component, one must follow with a zero digit (99.0) or an explicit conversion (99.to_f). It is insufficient to append a dot (99.) since numbers are susceptible to method syntax.
Boolean evaluation of non-boolean data is strict: 0, "" and [] are all evaluated to true. In C, the expression 0&#160;? 1&#160;: 0 evaluates to 0 (i.e. false). In Ruby, however, it yields 1, as all numbers evaluate to true; only nil and false evaluate to false. A corollary to this rule is that Ruby methods by convention — for example, regular-expression searches — return numbers, strings, lists, or other non-false values on success, but nil on failure. This convention is also used in Smalltalk, where only the special objects true and false can be used in a boolean expression.
Versions prior to 1.9 use plain integers to represent single characters, much like C. This may cause surprises when slicing strings: "abc"[0] yields 97 (the ASCII code of the first character in the string); to obtain "a" use "abc"[0,1] (a substring of length 1) or "abc"[0].chr.
The notation statement until expression, unlike other languages' equivalent statements (e.g. do { statement } while (!(expression)); in C/C++/...), actually never runs the statement if the expression is already true. This is because statement until expression is actually syntactic sugar over until expression; statement; end, the equivalent of which in C/C++ is while (!(expression)) { statement; }, just like statement if expression is an equivalent to if (expression) { statement; }. However, the notation begin statement end until expression in Ruby will in fact run the statement once even if the expression is already true, acting similar to the "do-while" of other languages.
Because constants are references to objects, changing what a constant refers to generates a warning, but modifying the object itself does not. For example, Greeting &lt;&lt; " world!" if Greeting == "Hello" does not generate an error or warning. This is similar to final variables in Java or a const pointer to a non-const object in C++, but Ruby provides the functionality to "freeze" an object, unlike Java or C++.

Some features which differ notably from other languages:

The usual operators for conditional expressions, and and or, do not follow the normal rules of precedence: and does not bind tighter than or. Ruby also has expression operators || and &amp;&amp; which work as expected.

A list of so-called gotchas may be found in Hal Fulton's book The Ruby Way, 2nd ed (ISBN 0-672-32884-4), Section 1.5. A similar list in the 1st edition pertained to an older version of Ruby (version 1.6), some problems of which have been fixed in the meantime. retry, for example, now works with while, until, and for, as well as iterators.
[edit] Interaction
See also: Interactive Ruby Shell
The Ruby official distribution also includes "irb", an interactive command-line interpreter which can be used to test code quickly. The following code fragment represents a sample session using irb:



$ irb
irb(main):001:0&gt; puts "Hello, World"
Hello, World
=&gt; nil
irb(main):002:0&gt; 1+2
=&gt; 3


[edit] Examples
The following examples can be run in a Ruby shell such as Interactive Ruby Shell or saved in a file and run from the command line by typing ruby &lt;filename&gt;.
Classic Hello world example:



puts "Hello World!"


Some basic Ruby code:



# Everything, including a literal, is an object, so this works:
-199.abs                                                # 199
"ruby is cool".length                                   # 12
"Your mother is nice.".index("u")                       # 2
"Nice Day Isn't It?".downcase.split("").sort.uniq.join  # " '?acdeinsty"


Conversions:



puts "What's your favorite number?"
number = gets.chomp
output_number = number.to_i + 1
puts output_number.to_s + ' is a bigger and better favorite number.'


[edit] Strings
There are a variety of methods of defining strings in Ruby
The below conventions are equivalent for double quoted strings:



a = "\nThis is a double quoted string\n"
a = %{\nThis is a double quoted string\n}
a = %Q{\nThis is a double quoted string\n}
a = &lt;&lt;BLOCK
 
This is a multi-line double quoted string
BLOCK
a = %/\nThis is a double quoted string\n/


The below conventions are equivalent for single quoted strings:



a = 'This is a single quoted string'
a = %q{This is a single quoted string}


[edit] Collections
Constructing and using an array:



a = [1, 'hi', 3.14, 1, 2, [4, 5]]
 
puts a[2]           # 3.14
puts a.[](2)        # 3.14
puts a.reverse      # [[4, 5], 2, 1, 3.14, 'hi', 1]
puts a.flatten.uniq # [1, 'hi', 3.14, 2, 4, 5]


Constructing and using an associative array:



hash = { :water =&gt; 'wet', :fire =&gt; 'hot' }
puts hash[:fire] # Prints:  hot
 
hash.each_pair do |key, value| # Or:  hash.each do |key, value|
  puts "#{key} is #{value}"
end
 
# Prints:  water is wet
#          fire is hot
 
hash.delete :water # Deletes :water =&gt; 'wet'
hash.delete_if {|key,value| value=='hot'} # Deletes :fire =&gt; 'hot'


[edit] Blocks and iterators
The two syntaxes for creating a code block:



{ puts "Hello, World!" } # Note the { braces }
#or
do puts "Hello, World!" end


When a code block is created it is always attached to a method as an optional block argument.
Parameter-passing a block to be a closure:



# In an object instance variable (denoted with '@'), remember a block.
def remember(&amp;a_block)
  @block = a_block
end
 
# Invoke the above method, giving it a block which takes a name.
remember {|name| puts "Hello, #{name}!"}
 
# When the time is right (for the object) -- call the closure!
@block.call("Jon")
# =&gt; "Hello, Jon!"


Creating an anonymous function:



proc {|arg| print arg}
Proc.new {|arg| print arg}
lambda {|arg| print arg}


Returning closures from a method:



def create_set_and_get(initial_value=0) # Note the default value of 0
  closure_value = initial_value
  return Proc.new {|x| closure_value = x}, Proc.new { closure_value }
end
 
setter, getter = create_set_and_get  # ie. returns two values
setter.call(21)
getter.call # =&gt; 21
 
#You can also use a parameter variable as a binding for the closure. 
#So the above can be rewritten as...
 
def create_set_and_get(closure_value=0)
  proc {|x| closure_value = x } , proc { closure_value }
end


Yielding the flow of program control to a block which was provided at calling time:



def use_hello
  yield "hello"
end
 
# Invoke the above method, passing it a block.
use_hello {|string| puts string} # =&gt; 'hello'


Iterating over enumerations and arrays using blocks:



array = [1, 'hi', 3.14]
array.each {|item| puts item }
# =&gt; 1
# =&gt; 'hi'
# =&gt; 3.14
 
array.each_index {|index| puts "#{index}: #{array[index]}" }
# =&gt; 0: 1
# =&gt; 1: 'hi'
# =&gt; 2: 3.14
 
(3..6).each {|num| puts num }
# =&gt; 3
# =&gt; 4
# =&gt; 5
# =&gt; 6


A method such as inject() can accept both a parameter and a block. Inject iterates over each member of a list, performing some function on while retaining an aggregate. This is analogous to the foldl function in functional programming languages. For example:



[1,3,5].inject(10) {|sum, element| sum + element} # =&gt; 19


On the first pass, the block receives 10 (the argument to inject) as sum, and 1 (the first element of the array) as element; this returns 11. 11 then becomes sum on the next pass, which is added to 3 to get 14. 14 is then added to 5, to finally return 19.
Blocks work with many built-in methods:



File.open('file.txt', 'w') do |file| # 'w' denotes "write mode".
  file.puts 'Wrote some text.'
end                                  # File is automatically closed here
 
File.readlines('file.txt').each do |line|
  puts line
end
# =&gt; Wrote some text.


Using an enumeration and a block to square the numbers 1 to 10:



(1..10).collect {|x| x*x} # =&gt; [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]


[edit] Classes
The following code defines a class named Person. In addition to 'initialize', the usual constructor to create new objects, it has two methods: one to override the &lt;=&gt; comparison operator (so Array#sort can sort by age) and the other to override the to_s method (so Kernel#puts can format its output). Here, "attr_reader" is an example of metaprogramming in Ruby: "attr_accessor" defines getter and setter methods of instance variables, "attr_reader" only getter methods. Also, the last evaluated statement in a method is its return value, allowing the omission of an explicit 'return'.



class Person
  attr_reader :name, :age
  def initialize(name, age)
    @name, @age = name, age
  end
  def &lt;=&gt;(person) # Comparison operator for sorting
    @age &lt;=&gt; person.age
  end
  def to_s
    "#@name (#@age)"
  end
end
 
group = [
  Person.new("Bob", 33), 
  Person.new("Chris", 16), 
  Person.new("Ash", 23) 
]
 
puts group.sort.reverse


The above prints three names in reverse age order:



Bob (33)
Ash (23)
Chris (16)


[edit] Open classes
In Ruby, classes are never closed: you can always add methods to an existing class. This applies to the classes you write as well as the standard, built-in classes. All you have to do is open up a class definition for an existing class, and the new contents you specify will be added to whatever's there. A simple example of adding a new method to the standard library's Time class:



# re-open Ruby's Time class
class Time
  def yesterday
    self - 86400
  end
end
 
today = Time.now # =&gt; Thu Aug 14 16:51:50 +1200 2008
yesterday = today.yesterday # =&gt; Wed Aug 13 16:51:50 +1200 2008


Adding methods to previously defined classes is often called monkey-patching. This practice, however, can lead to possible collisions of behavior and subsequent unexpected results, and is a concern for code scalability if performed recklessly.
[edit] Exceptions
An exception is raised with a raise call:



raise


An optional message can be added to the exception:



raise "This is a message"


You can also specify which type of exception you want to raise:



raise ArgumentError, "Illegal arguments!"


Alternatively, you can pass an exception instance to the raise method:



raise ArgumentError.new("Illegal arguments!")


This last construct is useful when you need to raise a custom exception class featuring a constructor which takes more than one argument:



class ParseError &lt; Exception
  def initialize input, line, pos
    super "Could not parse '#{input}' at line #{line}, position #{pos}"
  end
end
 
raise ParseError.new("Foo", 3, 9)


Exceptions are handled by the rescue clause. Such a clause can catch exceptions which inherit from StandardError. Also supported for use with exceptions are else and ensure



begin
# Do something
rescue
# Handle exception
else
# Do this if no exception was raised
ensure
# Do this whether or not an exception was raised
end


It is a common mistake to attempt to catch all exceptions with a simple rescue clause. To catch all exceptions one must write:



begin
# Do something
rescue Exception # don't write just rescue -- that only catches StandardError, a subclass of Exception
# Handle exception
end


Or catch particular exceptions:



begin
# ...
rescue RuntimeError 
# handling
end


It is also possible to specify that the exception object be made available to the handler clause:



begin
# ...
rescue RuntimeError =&gt; e
# handling, possibly involving e, such as "print e.to_s"
end


Alternatively, the most recent exception is stored in the magic global $!.
You can also catch several exceptions:



begin
# ...
rescue RuntimeError, Timeout::Error =&gt; e
# handling, possibly involving e
end


[edit] Metaprogramming
Ruby provides a programmer the ability to add to or modify methods in the language's standard library during runtime, as well for a Ruby program to modify itself during its operation without generating source code, techniques known as metaprogramming.
[edit] More examples
More sample Ruby code is available as algorithms in the following articles:

Exponentiating by squaring
Trabb Pardo-Knuth algorithm

[edit] Implementations
See also: Ruby MRI#Operating systems
The newest version of Ruby, the recently released version 1.9, has a single working implementation written in C that utilizes a Ruby-specific virtual machine.
Ruby version 1.8 has two main implementations: The official Ruby interpreter often referred to as the Matz's Ruby Interpreter or MRI, which is the most widely used, and JRuby, a Java-based implementation that runs on the Java Virtual Machine.
There are other less-known or upcoming implementations such as Cardinal (an implementation for the Parrot virtual machine), IronRuby (alpha version available since July 24, 2008[21]), MacRuby (0.5 experimental), MagLev, Rubinius, Ruby.NET, XRuby,
The maturity of Ruby implementations tends to be measured by their ability to run Rails (because this is a complex framework to implement, and it uses a lot of Ruby-specific features). The point when a particular implementation achieves this goal is called The Rails singularity. As of January 2009, only the reference implementation (MRI) and JRuby are able to run Rails unmodified in a production environment.[22] IronRuby[23][24] and Rubinius[25] start to be able to run Rails test cases, but they still are far from production-ready for this task.
Ruby is available on many operating systems such as Linux, Mac OS X, Microsoft Windows, Windows CE and most flavors of Unix.
Ruby 1.9 has recently been ported onto Symbian OS 9.x[26].
[edit] Repositories and libraries
The Ruby Application Archive (RAA), as well as RubyForge, serve as repositories for a wide range of Ruby applications and libraries, containing more than seven thousand items. Although the number of applications available does not match the volume of material available in the Perl or Python community, there are a wide range of tools and utilities which serve to foster further development in the language.
RubyGems has become the standard package manager for Ruby libraries. It is very similar in purpose to Perl's CPAN, although its usage is more like apt-get.
Recently, many new and existing libraries have found a home on Github, which is focused on Git and has native support for RubyGems packaging, but not for long.[6]
[edit] See also




Free software portal




Duck typing
Comparison of programming languages
Ruby MRI, the reference C implementation
JRuby
MacRuby
IronRuby
Rubinius
XRuby
Ruby on Rails

[edit] References


^ http://www.ruby-lang.org/en/about/ Ruby-Lang About Ruby
^ a b http://www.linuxdevcenter.com/pub/a/linux/2001/11/29/ruby.html An Interview with the Creator of Ruby
^ a b c http://blog.nicksieger.com/articles/2006/10/20/rubyconf-history-of-ruby History of Ruby
^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/88819 "[FYI: historic] The decisive moment of the language name Ruby. (Re: [ANN] ruby 1.8.1)" - Email from Hiroshi Sugihara to ruby-talk
^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/394 "Re: the name of Ruby?" - Email from Yukihiro Matsumoto to ruby-talk
^ http://eigenclass.org/hiki/ruby+0.95 More archeolinguistics: unearthing proto-Ruby
^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/382 "Re: history of ruby" - Email from Yukihiro Matsumoto to ruby-talk
^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/124 "TUTORIAL - ruby's features" - Email From Yukihiro Matsumoto to ruby-list
^ The Ruby Programming Language by Yukihiro Matsumoto on 2000-06-12 (informit.com)
^ a b c The Philosophy of Ruby, A Conversation with Yukihiro Matsumoto, Part I by Bill Venners on 2003-09-29 (Artima Developer)
^ Ruby Weekly News 23rd - 29th May 2005
^ [1]
^ [2]
^ [3]
^ [4]
^ [5]
^ Green threads
^ Ruby FAQ
^ How Does Ruby Compare With Python? (FAQ)
^ In Ruby's syntax, statement is just a special case of an expression which cannot appear as an argument (e.g. multiple assignment). http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/1120
statement [...] can not be part of expression unless grouped within parentheses. http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2460
^ Lam, John (2008-07-24). "IronRuby at OSCON". http://www.iunknown.com/2008/07/ironruby-at-oscon.html. Retrieved 2008-08-04.  "We’re shipping our first binary release. In this package, we’re taking a “batteries included” approach and shipping the Ruby standard libraries in it"&#160;
^ Charles Nutter (2008-04-27). "Promise and Peril for Alternative Ruby Impls". http://headius.blogspot.com/2008/04/promise-and-peril-for-alternative-ruby.html. Retrieved 2008-06-01.&#160;
^ John Lam (2008-05-25). "IronRuby / Rails Question". http://rubyforge.org/pipermail/ironruby-core/2008-May/001909.html. Retrieved 2008-05-25.&#160;
^ John Lam (2008-05-30). "IronRuby and Rails". http://www.iunknown.com/2008/05/ironruby-and-rails.html. Retrieved 2008-06-01.&#160;
^ Evan Phoenix (2008-05-17). "Rails on Rubinius". http://blog.fallingsnow.net/2008/05/17/rails-on-rubinius/. Retrieved 2008-05-25.&#160;
^ "Ruby 1.9 for Symbian OS". http://www.pragmaticomm.com/MobileRuby. Retrieved 2008-12-03.&#160;


[edit] Bibliography


McAnally, Jeremy; Arkin, Assaf (March 28, 2009), Ruby in Practice (First ed.), Manning Publications, pp.&#160;360, ISBN 1933988479, http://www.manning.com/mcanally/&#160;
Thomas, Dave; Fowler, Chad; Hunt, Andy (April 28, 2009), Programming Ruby 1.9: The Pragmatic Programmers' Guide (Third ed.), Pragmatic Bookshelf, pp.&#160;1000, ISBN 1934356085, http://pragprog.com/titles/ruby3/programming-ruby-1-9&#160;
Flanagan, David; Matsumoto, Yukihiro (January 25, 2008), The Ruby Programming Language (First ed.), O'Reilly Media, pp.&#160;446, ISBN 0596516177, http://oreilly.com/catalog/9780596516178/&#160;
Baird, Kevin (June 8, 2007), Ruby by Example: Concepts and Code (First ed.), No Starch Press, pp.&#160;326, ISBN 1593271484, http://nostarch.com/ruby.htm&#160;
Fitzgerald, Michael (May 14, 2007), Learning Ruby (First ed.), O'Reilly Media, pp.&#160;255, ISBN 0596529864, http://oreilly.com/catalog/9780596529864&#160;
Cooper, Peter (March 26, 2007), Beginning Ruby: From Novice to Professional (First ed.), Apress, pp.&#160;664, ISBN 1590597664, http://apress.com/book/view/9781590597668&#160;
Fulton, Hal (November 4, 2006), The Ruby Way (Second ed.), Addison-Wesley Professional, pp.&#160;888, ISBN 0596523696, http://www.informit.com/store/product.aspx?isbn=0672328844&#160;
Carlson, Lucas; Richardson, Leonard (July 19, 2006), Ruby Cookbook (First ed.), O'Reilly Media, pp.&#160;906, ISBN 0596523696, http://oreilly.com/catalog/9780596523695/&#160;


[edit] External links



Wikibooks has a book on the topic of
Ruby Programming






Wikiversity has learning materials about Topic:Ruby



Ruby language home page
Ruby documentation site
The Great Ruby Shootout (December 2008): Ruby implementations comparison.
Collingbourne, Huw (June 17 2006), The Little Book Of Ruby, free PDF eBook 1.1MB, pp. 87
Collingbourne, Huw (April 18 2009), The Book Of Ruby, free PDF eBook 2.9MB, pp. 425
Ruby.on-page.net — simple Ruby manual with many samples
[7] - an online ruby textbook in graphic novel format
Ruby at the Open Directory Project
Ruby User Guide By Matz, the creator of Ruby. Translated into English.
Ruby From Other Languages
Wiki: Ruby language and implementation specification (Dead link - 2009.08.10)
Writing C Extensions to Ruby (MRI 1.8)
RubyFlow: Community Filtered Ruby News








v&#160;•&#160;d&#160;•&#160;e

Ruby programming language





IDE

Netbeans&#160;· RubyForge&#160;· RadRails&#160;· RubyMine






Implementations

Ruby MRI&#160;· YARV&#160;· JRuby&#160;· IronRuby&#160;· Rubinius&#160;· XRuby&#160;· MacRuby






Applications

RubyGems&#160;· Rake&#160;· Interactive Ruby Shell&#160;· Capistrano&#160;· SketchUp Ruby






Libraries / Frameworks

Adhearsion&#160;· Camping&#160;· eRuby (RHTML)&#160;· Merb&#160;· Nitro&#160;· RubyCocoa&#160;· Ruby on Rails&#160;· Sinatra






Server Software

Mongrel&#160;· Phusion Passenger (mod_rails/mod_rack)&#160;· WEBrick&#160;· mod_ruby






Other

Application Archives&#160;· Document format&#160;· Book Guides&#160;· Ruby Central&#160;· Hackety Hack






Category











Retrieved from "http://en.wikipedia.org/wiki/Ruby_(programming_language)"
			Categories: Class-based programming languages | Dynamically-typed programming languages | Scripting languages | Object-oriented programming languages | Curly bracket programming languages | Articles with example Ruby code | Ruby programming languageHidden categories: NPOV disputes from October 2009 | All NPOV disputes			
						
		
	
		
		
	
		Views
		
			
	
				 Article
				 Discussion
				 Edit this page
				 History			
		
	
	
		Personal tools
		
			
				Try Beta
				Log in / create account
			
		
	
	
		
	
	 if (window.isMSIE55) fixalpha(); 
	
		Navigation
		
			
				Main page
				Contents
				Featured content
				Current events
				Random article
			
		
	
	
		Search
		
			
				
				
				&nbsp;
				
			
		
	
	
		Interaction
		
			
				About Wikipedia
				Community portal
				Recent changes
				Contact Wikipedia
				Donate to Wikipedia
				Help
			
		
	
	
		Toolbox
		
			
				What links here
				Related changes
Upload file
Special pages
				Printable version				Permanent linkCite this page			
		
	
	
		Languages
		
			
				العربية
				বাংলা
				Български
				Català
				Česky
				Dansk
				Deutsch
				Español
				Esperanto
				Euskara
				فارسی
				Français
				Galego
				한국어
				Hrvatski
				Bahasa Indonesia
				Interlingua
				Italiano
				עברית
				ქართული
				Lietuvių
				Magyar
				Bahasa Melayu
				မြန်မာဘာသာ
				Nederlands
				日本語
				‪Norsk (bokmål)‬
				‪Norsk (nynorsk)‬
				Polski
				Português
				Română
				Русский
				Slovenčina
				Soranî / کوردی
				Српски / Srpski
				Suomi
				Svenska
				தமிழ்
				ไทย
				Тоҷикӣ
				Türkçe
				Українська
				Tiếng Việt
				粵語
				Žemaitėška
				中文
			
		
	
		
			
			
				
				
			
					 This page was last modified on 14 October 2009 at 06:29.
					Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.
See Terms of Use for details.
Wikipedia&reg; is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
					Privacy policy
					About Wikipedia
					Disclaimers
			
		


if (window.runOnloadHook) runOnloadHook();


 


  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  Saki's Ext Examples Page





	
		Components Communication
		
		This example shows where to put the code that implements the communication among
		components.
		
		
		Code that creates and activates the new tab when a link is clicked is neither part
		of the west "link" panel nor the center tab panel but it is part of the window which
		is aware of the existence of both panels.
		

		Further Reading
		
		Writing
		a Big Application in Ext
	

	
		Production/Development Switch
		
		This example shows how to easily and automatically switch between production and development
		system.
		
		
		We include individual JavaScript files and the debug version of ExtJS Library in the development version
		and concatenated and compressed files and the compressed version of ExtJS Library in the production version.
		

		Further Reading
		How to switch between Production and Development system
		GNU Make
		PHP
		
	

	
		Drag &amp; Drop Between Grids
		
		This is a simple grid-to-grid D&amp;D implementation that allows you to drag rows from one grid
		and drop them to another. Rows are only appended to the target grid for simplicity.
		
		
		The key is to enable the built-in D&amp;D for both grids and to implement the custom GridDropZone that removes
		records from the source store and appends them to the destination store.
		
		Further Reading
		
		Ext.dd.DropZone
		Ext.grid.GridPanel
		Ext.data.Store
		
	

	
		Displaying Form Submit Errors
		
		This example shows how to display errors that come back from the server if the server validation fails.
		
		
		Form initially loads valid from the client validation viewpoint but the server returns errors after submit.
		These errors are displayed as toolips of error icons. They can be alternatively displayed in any valid field msgTarget.
		
		
		The key is to return JSON in the format that Ext can understand and process as fields errors.
		
		Further Reading
		
		Ext.form.Field.msgTarget
		Ext.form.Action.Submit
		
	

	
		Fieldsets in 2 Columns Layout
		
		This example shows how to properly configure side-by-side anchored fieldsets.
		
		
		As you resize the window, the fieldsets with fields resize themselves to fill the new width.
		This is done with the help of Form Layout that extends Anchor Layout. Column Layout is used
		to put fieldsets side-by-side.
		
		Further Reading
		
		Ext.layout.FormLayout
		Ext.layout.AnchorLayout
		Ext.layout.ColumnLayout
		
	

	
		Form Fields Anchoring
		
		This example show both horizontal and vertical anchoring of form fields.
		
		
		Fields resize to fill the available space when you resize the window.
		
		Further Reading
		
		Ext.layout.FormLayout
		Ext.layout.AnchorLayout
		
	

	
		Form Load And Submig
		
		This example shows how to load form data from server and how to submit form.
		
		
		The form starts empty and when you click Load button the data is loaded from the server and the form
		fields are filled in. When you click Submit button the data is sent to the server and a result is returned.
		In this example, result alternates between success and failure.
		
		
		Submit button in disabled until the form becomes valid.
		

		Further Reading
		
		Ext.form..Action.Load
		Ext.form..Action.Submit
		Ext.form.FormPanel::monitorValid
		
	

	
		Image In Form
		
		This example shows how to put an image, or any other static content, into a form.
		
		
		The key is a BoxComponent with properly configured autoEl.
		
		Further Reading
		
		Ext.BoxComponent::autoEl
		
	

	
		Tabs in Form
		This example shows how to correctly configure tabs in a form.
		
		If form containing tabs is not properly configured, rendering problems of fields on initially inactive tabs,
		especially combos or dates, may result. Form can also submit only fields from the active tab or anchoring
		of fields on tabs does not work. The example is free of all these problems.
		
		Further Reading

		
		Ext.form.FormPanel
		Ext.TabPanel
		Ext.layout.AnchorLayout
		
	

	
		Displaying 1:n Data in QuickTips
		
		This example shows how to display data from "many" table in QuickTips of a grid that displays data from "one" table.
		
		
		Although simple, it can be useful for displaying person:phones, company:addresses, invoice:items or any other 1:many data.
		
		Further Reading
		
		Displaying 1:n Data in Grid
		
	

	
		Grid In An Accordion
		
		This example shows how to put a grid in an Accordion Layout panel which can be initially inactive.
		
		
		The key is lazy instantiating and rendering.
		
		Further Reading
		
		Lazy Instantiating/Rendering Explanation
		Writing
		a Big Application in Ext
		xtype defined
		
	

	
		Grid In An Inactive Tab
		
		This example shows how to put a grid in a tab which can be initially inactive.
		
		
		The key is lazy instantiating and rendering.
		
		Further Reading
		
		Lazy Instantiating/Rendering Explanation
		Writing
		a Big Application in Ext
		xtype defined
		
	

	
		Grid In Border Layout
		
		This example shows how to put a grid in a Border Layout region.
		
		
		The key is lazy instantiating and rendering.
		
		
		The example uses the working Paging Toolbar so you can also see how it is implemented including the server side 
		PHP script.
		
		Further Reading
		
		Lazy Instantiating/Rendering Explanation
		Writing
		a Big Application in Ext
		xtype defined
		
	

	
		Simplest Border Layout
		
		This is a minimalistic example of Border Layout configuration; it cannot be any simpler.
		
		Further Reading
		
		Ext.layout.BorderLayout
		
	

	
		Simple Table Layout
		
		This is a simple Table Layout example.
		
		Further Reading
		
		Ext.layout.TableLayout
		
	

	
		Simple Viewport
		
		This is a simple Viewport with Border Layout example.
		
		Further Reading
		
		Ext.Viewport
		Ext.layout.BorderLayout
		
	

	
		Tab Panel in Accordion
		
		This example shows how to put a TabPanels in an Accordion Layout.
		
		
		The key is lazy instantiating and rendering.
		
		Further Reading
		
		Lazy Instantiating/Rendering Explanation
		Writing
		a Big Application in Ext
		xtype defined
		Ext.layout.AccordionLayout
		
	

	
		Simple Window/Panel autoLoad
		
		This example shows how to configure Window or Panel content autoLoad.
		
		
		When the Window or Panel is rendered a request is sent to the server and the Window or Panel body is
		updated with the delivered content.
		
		Further Reading
		
		Ext.Panel::autoLoad
		Ext.Element::load
		
	

	
		Keeping An Accordion State
		
		This example shows how to keep an Accordion Layout state so it expands same panel on a new page load.
		
		
		The trick is to supply getState function that returns collapsed state of panels and this state
		is saved by the State Manager. When Accordion is instantiated next time, collapsed configuration property
		is applied to all panels as retrieved from the State Manager so the Accordion renders in the same state as you left it last time.
		
		Further Reading
		
		Ext.state.Manager
		Ext Manual:Core:State
		
	

	
		Keeping Active Tab and Window State
		
		This example shows how to keep active tab of TabPanel and how to keep Window position and size between sessions.
		
		
		The trick is to supply getState function that returns active tab index for TabPanel. This state
		is saved by the State Manager. When TabPanel is instantiated next time, activeTab configuration property
		is retrieved from the State Manager and applied to TabPanel so it renders in the same state as you left it last time. It 
		is even simpler for Window, see the code.
		
		Further Reading
		
		Ext.state.Manager
		Ext Manual:Core:State
		
	

	
		3 Columns Layout Using CSS
		
		Example of creating a 3 column layout with CSS only, no coding is required.
		
		Further Reading
		
		CSS Tutorial
		
	

	
		Handling Item Clicks
		
		Example of handling clicks on items contained in a container (Panel, Window) with one event handler.
		
		
		It also shows how to cleverly filter clicks from disabled items that are made visually disabled too.
		
		
		The example also shows:
		
		how to customize a class without extending
		how to create items using (X)Template
		how to use DomQuery
		how to use Ext.fly
		how to style a specific Window/Panel using css
		how to use MessageWindow extension
		
		
	

	
		Free Drag with State
		
		This example shows how to setup dragging of items within a container to reposition them.
		Items positions are saved using Ext state management and CookieProvider.
		
		
		The example also shows:
		
		how to customize a class without extending
		how to create items using (X)Template
		how to setup a state saving
		how to style a specific Window/Panel using css
		
		
		Further Reading
		
		Custom Drag&amp;Drop Tutorial
		Ext Manual:Core:State
		
	

	
		Populate Combo on Form Load
		
		This example shows how to populate a combo with data received from the server on form load.
		
	

	
		Drag from Tree to Div
		
		This example shows simple setup of a draggable tree and processing of drops at the target.
		
	

	
		Complex Data Binding
		
		This example shows how to implement component communication using data binding. The data is kept in
		records in grid store. When a cell is clicked, the underlying record is bound to both show panel and
		form.
		
		
		Changes made in the grid are automatically reflected in both Show Panel and Form, changes in Form are updated
		in both Grid and Show Panel - data is changed in one place, the record, in fact.
		
		Note: This example is not for beginners.
		
	

	
		Drag from Tree to Div
		
		This example shows simple setup of a draggable tree and processing of drops at the target.
		
	

	
		CheckTreePanel in Form
		
		This example shows how to use my CheckTreePanel
		in a form. The form is capable of loading and submitting from/to the server.
		
		Note:
		
		I have added simple form compatibility methods to CheckTreePanel only for the purpose of this example.
		I would write better ones if the interest of the community would be adequate.
		
	

	
		Dynamically Adding Tabs
		
		This example shows how to dynamically add tabs to TabPanel. You can choose between simple adding
		and adding and activating the new tab.
		
	

	
		Column Layout in Form
		
		This example shows how to properly configure column layout in form. Using a column layout
		in form is one of the solutions of putting form fields side by side in one row.
		
	

	
		 Using Grid rowBody
		This example shows how to use grid rowBody for displaying longer information pertinent to the whole row
		such as description or similar.
		
		
		Note that the text in the row body is selectable so it can by copied &amp; pasted. See CSS Source to find out
		how it is done.
		
		
		Same, or similar CSS can be used also for grids with RowExpander plugin.
		
	

	
		Combo with Remote Store
		
		This is advanced, full-fledged example of a combo with remote store.
		
		
		The example shows:
		
		how to setup combo with remote store
		how to use combo to search
		how to use paging in combo list
		how to configure resizable combo list
		how to use custom combo list template
		how to validate on render
		how to handle keystrokes
		how to set tooltip on field
		
		
	

	
		Asynchronous Tree State
		
		This example shows how to keep state of an asynchronous tree.
		
		
		The core code is written in the form of plugin so it can be used with any existing tree.
		
	

	
		Keeping Tab State Using Plugin
		
		This example shows how to keep active tab of TabPanel between sessions.
		
		
		The core code is written in the form of plugin so it can be used with any existing TabPanel.
		
	

	
		Downloading Files
		
		This example shows how to invoke browser "Save As..." dialog when downloading a file from the server.
		
		
		Server side script is oversimplified for the purpose of this example. You would open the file
		to download and you would return content of that file from the server in a real application.
		
	

	
		Drag from Grid to Tree
		
		This example shows how to drag row(s) from grid to tree.
		
		
		The example is simplified so you may need more logic in a real application.
		
	

	
		Simple Message Bus
		This is extremely simplified example of one way of implementing a message bus in Ext
		using the global Ext.util.Observable instance.
		
		The real application would probably implement subject, for example org.saki.app.desktop
		and message body as an object with data.
		
	

	
		Ext.ux.MsgBus
		
		This is example accompanying blog post on Ext.ux.MsgBus Plugin
		
	

	
		Grid in Card Layout
		
		This is example shows how to create a grid in Card Layout. 		
		It uses Ext 3.x and it will produce errors or will not work in Ext 2.x.
		However, the logic used would be same in Ext 2.x.
		

	

	
	When you click a specific example in the tree above the brief explanation of that example appears here.
	



 

	
		
		
		
		
		
		
	

	
	
		
		digg_url = 'http://examples.extjs.eu';
		
		
	
	









Free web analytics, website statistics






var pkBaseURL = (("https:" == document.location.protocol) ? "https://extjs.eu/piwik/" : "http://extjs.eu/piwik/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));

try {
    var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 1);
    piwikTracker.setDocumentTitle(document.title);
    piwikTracker.trackPageView();
    piwikTracker.enableLinkTracking();
} catch( err ) {}









  
    
    
        Using Git and Github for the Windows for newbies - Guides - GitHub
    
    

    
      
    

    
      
        
        
      
    
    
  


    

    
      github_user = null
    
  

  

  
    

    
      
        
          
            
          
          
          
  
    
      Advanced Search
       
      
      
      
      
    
  
  
    
      
        Home
        Pricing and Signup
        Explore GitHub
        
        Blog
      
      Login
    
  

        
      

      
        
          




  
  
    
      
        Home | 
        Edit | 
        
        New
      
    
    
      Guides: Using Git and Github for the Windows for newbies
      
      
    

    
      This is pretty much the shorthand version of this blogpost: http://kylecordes.com/2008/04/30/git-windows-go
Portuguese version available at: http://blog.tinogomes.com/2008/05/11/instalando-e-usando-git-no-windows-xp/
Another excellent and thorough resource is An Illustrated Guide to Git on Windows.
Git for Windows Developers: http://www.lostechies.com/blogs/jason_meridth/archive/2009/06/01/git-for-windows-developers-git-series-part-1.aspx
Git Installation
There are currently two ways to install Git in Windows. One way is to install it together with cygwin . But the easiest way is to install git with msysGit.
Installing git with msysGit
Download the latest installer from Google code and run it. To avoid path conflicts, pick the &#8220;Use Git Bash only&#8221; setting during the installation.
using git from the cmd.exe prompt
I&#8217;m not sure if this is a universal thing or not, but I will post my problems, and hopefully, they will help somebody. With msysgit, if you want to be able to run git from the command prompt, and thus use any git related software (EGit plugin for Eclipse, as an example), then you must do two things. First, you must select the &#8220;Run Git from the Windows Command Prompt&#8221; option, and second, you must use putty/plink/pageant for SSH. then you should be able to connect to GitHub without problem
Creating your very own SSH-key
In order to use git, you will need to generate a key.  To do this open Git Bash (from the start menu, quicklauncher or right click a directory and choose &#8220;Git Bash Here&#8221;.)  Type in the following: 


$ ssh-keygen -C "your@email.com" -t rsa
 

Use your own email address of course.  Use the default file name (id_rsa) and provide a password. The generated key will be stored in your profile, e.g.: C:\Documents and Settings\YourNameHere\.ssh\ on XP or C:\Users\YourNameHere\.ssh\ on Vista.
Identify yourself to git
With the bash shell still opened type in the following: 


$ git config --global user.name "Your Name Here"
$ git config --global user.email your@email.com
 

This will set the info stored when you commit to a git repository.
Now that you&#8217;ve set up git, you can find many more guides on how to use it in the guide list
    
  
  
  
    
      
        Last edited by ChrisMissal, about 1 month ago
      
      
        Versions:
        CurrentVersion 20 by dkgVersion 19 by dkgVersion 18 by dkgVersion 17 by dkgVersion 16 by dkgVersion 15 by tinogomesVersion 14 by tlareschVersion 13 by mojomboVersion 12 by defunktVersion 11 by defunktVersion 10 by defunktVersion 9 by chainesVersion 8 by tapajosVersion 7 by tekkubVersion 6 by tekkubVersion 5 by tekkubVersion 4 by tekkubVersion 3 by spoikeVersion 2 by spoikeVersion 1 by sarpulhu
      
    
  


        
      

      
    

    
      
        
          
            Blog |
            Support |
            Training |
            Contact |
            API |
            Status |
            GitHub on Twitter |
            Help

         
          
            GitHub&trade;
            is Logical Awesome &copy;2009 | Terms of Service | Privacy Policy
          
        
        
          
            Powered by the Dedicated
            Servers and Cloud
            Computing of Rackspace Hosting&reg;
          
          
            
          
        
      
    

    
      This feature is coming soon.  Sit tight!
    

    
        
    var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
    document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    
    
    var pageTracker = _gat._getTracker("UA-3769691-2");
    pageTracker._initData();
    pageTracker._trackPageview();
    

    
  

  

	Grails Framework Reference Documentation


 
 

 
 Frame Alert
 
 This document is designed to be viewed using the frames feature. If you see this message, you are using a non-frame-capable web client.
 










var ziRfw=0;function zIpSS(u){zpu(0,u,280,375,"ssWin")}function zIlb(l,t,f){zPxT('zIlb=1&sdn='+gs+'&zu='+zwl);var u=new Array([["1/XJ/W9","1/XJ/WP"],["1/XK/WB","1/XK/WQ"],["18/15m","1/XL/WR"]],[["18/15o","18/1Pp"]],[["1/XJ/WA","1/XJ/WP"],["1/XK/WC","1/XK/WQ"],["18/15m","1/XL/WR"],["18/15o","18/1Pp"]]);var p=l.parentNode.parentNode.parentNode.parentNode.id=="oC"?0:1;var clk;if(arguments.length==3){if(t==1){f=0}if(t==2&&!zIos(l.href)){f=3}clk=u[t][f][p]}else{var c=l.parentNode.parentNode.className;var t=c=="obE"?0:(c=="obS"?1:(c=="obO"?2:-1));var f=t==0?2:(t==1?0:(t==2&&zIos(l.href)?2:(t==2&&!zIos(l.href)?3:-1)));clk=u[t][f][p]}if(!clk)clk="18/15p";zT(l,clk)}function zIos(u){var r=(u.indexOf("&zu=")>0&&(u.substr(u.indexOf("&zu=")).indexOf("about.com")>0)||u.indexOf("http://")0)?false:true;return r}
zOBT=" Ads"


Vacation without Children - Childfree Getaways - No Kids Allowed


0){zOBR=1}
//-->


zJs=10
zJs=11
zJs=12
zJs=13
zc(5,'jsc',zJs,9999999,'')

zDO=0

z930=zpreC(930,48);if(thin){z930=0};z160=zpreC(160,600);z336=zpreC(336,280);z728=zpreC(728,90);z155=zpreC(336,155);zItw=160;

if(thin)gEI('abw').className='thin';

Search
Honeymoons / Romantic Travelvar h2=document.getElementsByTagName("h2")[0];if(h2.getElementsByTagName("a")[0].firstChild.nodeValue.length>28)h2.className="long";
HomeTravelHoneymoons / Romantic Travel
if(z930==0 && z728>0){adunit('','',uy,ch,gs,728,90,'1','lb',1)}
Emailw(x2+zWl+'?p=1" zT="18/1[N" rel="nofollow">Print')

Honeymoons / Romantic TravelHoneymoons 101Celebrate!Where to Goif(!thin && zp[8].d){w('#usrp #stab iframe{margin:0 0 -20px 0}#usrp #stab{background:0;margin-left:40px;min-width:0;margin-bottom:-4px;height:34px}');Dsp(zp[8],'ip');w('');}
if(z930>0){adunit('','',uy,ch,gs,930,48,'1','s',1)}Free Honeymoons / Romantic Travel Newsletter!Sign UpDiscuss in my Forum
Vacation Without ChildrenChildfree Getaways	By Susan Breslow Sardone, About.com
See More About:adult funvacations

Adults-only pool aboard Freedom of the Seas.&#169; Susan Breslow Sardone.&#160;

zSB(3,3)zob();if(zs


You're finally alone, ready to start your vacation. You turn to your beloved, about to speak. But then... &quot;WAAAAH!&quot; Suddenly, the sounds of silence are punctuated by a fretful, crying baby -- and the child is wailing as if it may not stop until it reaches college age.

When one travels, this happens all the time....in airports, on trains, planes, in restaurants, even in hotels with thin walls. Peace of mind is shattered by ear-piercing cries from OPBs (Other People's Babies).

What can you do?

Even if you have children, love kids, or are planning to start a family, you shouldn't have to spend a romantic vacation surrounded by the sticky-fingered set. The good news is, you don't have to. There are plenty of places that offer vacations without children; you just have to be selective.

Getaways Without Children
Many all-inclusive resorts such as Sandals, SuperClubs, and certain Club Med resorts restrict guests under age 16 or 18 -- so any immature people you may encounter on a vacation at such properties will be emotionally, rather than chronologically, immature. Also, numerous fine B&amp;Bs, especially those furnished with treasured antiques, do not accept youngsters. 

Cruising Without Children 

I don't know of any cruise line that restricts children, but if you want to avoid the little darlings, sailing a longer itinerary to distant ports at times other than summer and school breaks certainly cuts down on the likelihood you will encounter them. Large cruise ships are starting to make concessions to adults:


 Celebrity Solstice recently introduced its adults only AquaClass, an entire deck with adults-only cabins

 Freedom of the Seas dedicates one of its three outdoor pools to adults only -- and the bar is just steps away


 Princess Cruises has added to ships a dedicated childfree space called Sanctuary.






&quot;Safe&quot; Months to Travel
I've spoken with many hoteliers and they tell me the best times to travel are what they call the &quot;romance months&quot; of May and September when kids are in school. Personally, I've found  October and early June relatively childfree times to travel as well. Also, immediately before a major holiday, such as the first two weeks in November or in February before spring break is a safe bet.

&quot;Family-Friendly&quot; Resorts with Adults-Only Sections

The term &quot;family-friendly&quot; is a red flag for me and should be for others who'd rather not vacation among children. If you book such a resort, expect children to be seen and heard throughout your stay. We once took advantage of a  Valentine's Weekend package at a family-friendly resort expecting a reprieve from the shrieks of infants, but we were out of luck. To the consternation of childfree couples, new parents towed their issue along on what was intended to be a romantic interlude. One of the contributors to this site calls it &quot;stroller shock.&quot; 


Still, some multi-generational resorts do make a concerted effort to keep romantic couples and rambunctious families separate. The more upscale a place you select, the more likely it will have facilities that segregate children from grown-ups. Most hotel spas are off-limits to kids, for example, and better hotels and cruise lines feature adults-only pools. Among them: 
Acqualina Resort  in Miami has a childfree &quot;Tranquility Pool.&quot;

 

Beware of hotels that have adults-only swim hours, though: While you won't have to put up with screams and splashing, you will be swimming in the same water where diapers may have dipped earlier.


What You Can Do

Let the resort manager know how much you appreciate being in a serene, childfree space. The more you patronize places that cater exclusively to adults, the better it will be for everyone who likes to unwind without the presence of children.

Now if Disney would only make one day a month for adults on vacation without children, we'd be delighted. 





More Vacations Without ChildrenAdults-Only TravelAll-InclusivesNaked EscapesSuggested ReadingAvoid Spring Break MadnessHedonism IICelebrity Solstice AquaClass
 Related ArticlesFamily Vacations - Hotels and Resorts for Family VacationsStress and Travel With Kids -- How To Reduce The Stress of Traveling With K...Busy Dads - Time for Kids - Father&#39;s Day - Being Involved - Time for Ki...Sibling RivalryComing Out to Kids
Guide since 1997Susan Breslow SardoneHoneymoons / Romantic Travel GuideSign up for my NewsletterMy BlogMy ForumzSbL=3;zSB(2);zSbL=0


if(z336>0){w(''+ap[0]+at[4]+as[0]);adunit('','','about.com',ch,gs,336,280,'1','bb',3);w('')}if(z155>0){w(''+ap[0]+at[4]+as[0]);adunit('','','about.com',ch,gs,336,155,'1','ps',4);w('')}if(zp[7].d){Dsp(zp[7],'ip')}if(zp[11].d){Dsp(zp[11],'ip')}

Explore Honeymoons / Romantic TravelMust Reads50 Totally Romantic Vacation IdeasFall Travel Guide for CouplesUSA Top 25 HoneymoonsNude Beach GuidePhoto GalleriesMost PopularAnniversary Gift TripsWhat is Love QuotesNovember-December VacationsSexy Halloween CostumesLove Quotes
See More About:adult funvacationssplitList(getElementsByClassName('nav',gEI('bc2'))[0].getElementsByTagName('ul')[0]);By CategoryAll-Inclusive ResortsAdults-Only TravelHoneymoons 101Romantic PlacesBest of the USALas Vegas Wedding/HoneymoonCruises for CouplesCaribbean & MexicoDestination WeddingsLove & RomanceInexpensive HoneymoonsWeekend GetawayssplitList(gEI('bcl'));About.com Special Features
  
    
      Vacations Made Easy
    
    Find travel inspiration and get the best tips and reviews for your next getaway. 
                            More >
    
  


  
    
      When to Go on Safari
    
    The best times to visit East and Southern Africa. 
                            More >
    
  

if (typeof document.domain != "undefined") document.domain = "about.com";prepareTools();zCi();validateForms();check_modal();Honeymoons / Romantic Travelvar h2=document.getElementsByTagName("h2")[0];if(h2.getElementsByTagName("a")[0].firstChild.nodeValue.length>28)h2.className="long";HomeTravelHoneymoons / Romantic TravelAll-Inclusive ResortsArticles on All-InclusivesVacation without Children - Childfree Getaways - No Kids AllowedMost PopularLatest ArticlesAdd to: iGoogleMy Yahoo!RSSAdvertising InfoNews &amp; EventsWork at AboutSiteMapAll TopicsReprintsHelpUser AgreementEthics PolicyPatent Info.Privacy PolicyOur StoryBe a Guide&copy;2009 About.com, a part of The New York Times Company.All rights reserved.




var tcdacmd="dt;da";







Javalobby | The heart of the Java developer community







		






	
		
			
			  								
				Login
								Join DZone
											
			
				
				
				The heart of the Java developer community
			
			
								Home
Zones.NET Zone
Agile Zone
Architects Zone
Book Zone
Eclipse Zone
Groovy Zone
Javalobby
JetBrains Zone
NetBeans Zone
PHP Zone
RIA Zone
Refcardz
Ruby Zone
SOA Zone
SQL Zone
Server Zone
Web Builder Zone


Library
Refcardz
Forums
Links
Snippets

			
					
		
	
	
	
		 						 
							
			
							
						
					
										  	
	  		
	  		A Look Inside JBoss Microcontainer
	  		Ales Justin delves into the features of JBoss Microcontainer's Virtual File System architecture. 	
	  	
	  	
	  		
	  		Scrum Adoption Strategies
	  		Danube's Michael James describes the challenges and benefits of taking a Scrum-oriented approach. 	
	  	
							
														
					Latest Forum Posts
					JavaEE EJB. How to send large data to...
Need help with a complex Java...
Authenticate with ntlm (or kerberos)...
Screen Scraping Https/JavaScript?
Getting folder name of a file
Openxava start
How to get the type of a attribute...
					See more at DZone Forums
					
								
				
				
						
			
			
    
  
  
      
        
    


	    
            Integrating JBoss RESTEasy and Spring MVC        


      Building websites is
a tough job. It's even tougher when you also have to support XML and
JSON data services. Developers need to provide...
    
0 replies - 178 views - 10/15/09 by Solomon in Articles
  
  
    


	    
            Web Tech Skills PHP, Java, Dominate Demand        


      A new report released by the job site Elance shows a growth in tech contractor hiring, up 46% from this time last year on Elance.com.  After job losses in IT...
    
0 replies - 247 views - 10/15/09 by Mitch Pronschinske in News
  
  
    


	    
            2nd Annual OSGi Survey        


      Last year, I conducted a survey to gauge industry acceptance, adoption, and understanding of OSGi. I posted a summary of the results on my site with more...
    
1 replies - 534 views - 10/15/09 by Kirk Knoernschild in News
  
  
    


	    
            NetBeans 6.8 Beta Coming; Does Oracle Care?        


      NetBeans 6.8 just crossed milestone 2 and the beta is set to release next Thursday.  Geertjan Wielenga, a NetBeans technical writer and DZone contributor,
has...
    
7 replies - 2566 views - 10/14/09 by Mitch Pronschinske in News
  
  
    


	    
            SOA Manifesto and Benchmarks Sought        


      A collection of industry leaders from Oracle, Microsoft, IBM and various other companies met in September to draft a manifesto for SOA.  A manifesto is not an...
    
1 replies - 615 views - 10/14/09 by Mitch Pronschinske in News
  
  
    


	    
            The Continuing Relevance of Java        


      Over the past few weeks there have been a number of posts
on DZone debating whether Java is dead or not - it's as if this becomes
a seasonal debate. I was...
    
23 replies - 3097 views - 10/14/09 by James Sugrue in Articles
  
  
    


	    
            Oracle Taunts IBM with $10M Challenge        


      In the keynote address at Oracle OpenWorld this week, CEO of Oracle Larry Ellison fired back against rumors (that he believes were spread by IBM) about the...
    
1 replies - 2553 views - 10/13/09 by Mitch Pronschinske in News
  
  
    


	    
            ScalaTest 1.0 Release &quot;A Path Forward&quot; to Scala        


      Scala has made a name for itself recently with the announcement in April that Twitter was in the process of converting their back-end from Ruby to Scala.  The...
    
0 replies - 1406 views - 10/13/09 by Mitch Pronschinske in News
  
  
    


	    
            Book Review - Spring in Practice        



	      	The authors are targeting developers using the Spring Framework who want to learn more about certain topics, developers who want to catch up with some of the new features in Spring 3, or developers...
	  
0 replies - 1801 views - 10/13/09 by Craig in Book Reviews
  
  
    


	    
            Plan to Write Big Software - and You Have Already Lost        


      This idea came to me as a tweet, but was way too long for a tweet.
As it turns out, it’s also something I’ve been saying a lot lately,
since it’s the...
    
22 replies - 2730 views - 10/13/09 by olabini in Articles
  
  
    


	    
            Application Clustering For Scalability and High Availability        


      Application clustering is a sub-topic of “Parallel Computing”. Today many types of software support parallel computing in some form. Why do we need...
    
3 replies - 1262 views - 10/13/09 by Ibrahim in News
  
  
    


	    
            Flash on iPhone: Adobe Clears a Hurdle, But More Remain        


      Mobile devices by Palm, Microsoft, Google, and Symbian were all indicated as recipients of an upcoming beta of Flash Player 10.1 at last week's Adobe MAX...
    
1 replies - 1203 views - 10/12/09 by Mitch Pronschinske in News
  
  
    


	    
            The Passionate Programmer by Chad Fowler        


      Today I'm attending Developer Day in Boulder, Colorado. The opening keynote was done by Chad Fowler and below are my notes from his talk.
    
1 replies - 1908 views - 10/12/09 by Matt Raible in Articles
  
  
    


	    
            For a Fistful of Dollars: Quantifying the Benefits of TDD        


      According to a recent scientific study,
using TDD increases development (coding) time by 15-30%, but results in
40-90% fewer defects. This study was done with...
    
8 replies - 1424 views - 10/12/09 by John Ferguson Smart in Articles
  
  
    


	    
            New Color Chooser in JDK 7        


       Many changes in Swing will appear in JDK 7 including a new date chooser. I've recently noticed that the JColorChooser has also improved in JDK 7 adding new...
    
6 replies - 2922 views - 10/12/09 by Anthony Goubard in Articles
  
    
  
      1
2
3
4
5
6
7
8
9
…
next ›
last »
  
  
  
  
  
 
		
	
	
						
					
	

  
 Search this site: 
 







	

									
													
							
											
										
			
			
');
//-->

			
			  
			
			
		
														
  Zone Leaders

  
      



  
    
	
		Announcements
					QuickBuild 2.0 Community Edition - the Free Build Lifecycle Management Server
					JxBrowser 2.0 Early Access Program
					Using the UJO in Hiberante
					PDF Viewer Gets Coverflow Mode in Latest Release
					Sonar 1.11
					TestRail Test Management Beta
					Oxygen XML Editor and Oxygen XML Author 11
					Announcing the JavaFXpert RIA Exemplar Challenge
					NetBeans IDE 6.8 Milestone 2 Now Available for Download!
					Testing and TDD for Java Developers in Sydney this December
		See more announcements
		Post a new announcement
	

  



  
    Popular at DZoneAnnouncing JRebel 3.0 M1 -- The Next Generation
			IntelliJ IDEA sources available
			Hibernate Validator 4 unleashed
			Avoid common Java pitfalls
			Java Questions and Answers
			Groovy hip tip: to use or not to use setters and getters
			Combining Liquibase with Spring and JPA
			Artifactory Maven Repository Manager 2.1
			Kohsuke Kawaguchi Hudson Webinar
			Application Clustering For Scalability and High Availability
			See more popular at DZoneSubscribe to the RSS feed  

								
		
			
	Terms of Service - Privacy - &copy; 1997-2009, DZone, Inc.
	
	








	
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));



var pageTracker = _gat._getTracker("UA-410289-1");
pageTracker._setDomainName(".dzone.com");
pageTracker._initData();
pageTracker._trackPageview();

 


_qoptions={
qacct:"p-ebK_XdQH1HeLo"
};







_atrk_opts = {
atrk_acct: "2Zc291a0g0y12X" }; atrk ();





Java GUI Testing Tool Squish Supports New Eclipse &quot;Ganymede&quot; 3.4 | Javalobby




	
	

			
		






	
		
			
			  								
				Login
								Join DZone
											
			
				
				
				The heart of the Java developer community
			
			
								Home
Zones.NET Zone
Agile Zone
Architects Zone
Book Zone
Eclipse Zone
Groovy Zone
Javalobby
JetBrains Zone
NetBeans Zone
PHP Zone
RIA Zone
Refcardz
Ruby Zone
SOA Zone
SQL Zone
Server Zone
Web Builder Zone


Library
Refcardz
Forums
Links
Snippets

			
				
	
    
      
    ');
    //-->
    
      
        
      
      
    
    
		
		
	
	
	
		 Home						 
						
		   
		   var dzone_title = 'Java GUI Testing Tool Squish Supports New Eclipse \"Ganymede\" 3.4';
			 		   var dzone_url = 'http://java.dzone.com/announcements/java-gui-testing-tool-squish-s-0';
		   		   Java GUI Testing Tool Squish Supports New Eclipse &quot;Ganymede&quot; 3.4
														
							
			
						
			
			


   
    Submitted by Reginald Stadlbauer on Tue, 2008/07/08 - 5:03am
    
    	




        Tags: Eclipse
froglogic
java
squish
testing

    
  
 
        		Ads by DZone		Squish, the cross-platform automated GUI testing tool for Java and Web applications, now supports testing of Java GUI applications based on the new Eclipse 3.4 RCP framework code named &quot;Ganymede&quot;.&quot;The availability of 3rd party tools, such as GUI testing tools, is vital for the Eclipse community. We are glad to see froglogic quickly adopting new Eclipse releases with its Squish GUI test tool&quot;, said Mike Milinkovich, Executive Director of the Eclipse Foundation.&quot;The Ganymede release is another great release of the Eclipse community which will make it even more attractive for application developers. Quickly adding support for testing Eclipse 3.4 based applications with Squish has been a logical step for us.&quot;, said Harri Porten, froglogic's platform chief.By staying up-to-date with the Eclipse development, froglogic shows its commitment to the Java and Eclipse community.To learn more about Squish, please visit http://www.froglogic.com&nbsp;&nbsp;
      Location:&nbsp;
    
            
                    Hamburg        
        


 Your rating: 
 0
 

	
			

    
Login or register to post comments
4511 reads
Printer-friendly version
(Note: Opinions expressed in this article and its replies are the opinions of their respective authors and not those of DZone, Inc.)

		
	
	
						
					
	

  
 Search this site: 
 







	

									
													
							
											
										
			
			
');
//-->

			
			  
			
			
		
														
  About the author

  
    First Name: ReginaldLast Name: StadlbauerPosts: 11Joined: 12/21/2006View full user profile  



  
    Spotlight Features					  	
	  		
	  		The Great Agile Migration
	  		How do you transition 25,000 IBM developers from waterfall to agile?  Sue McKinney knows how - hear her story.  	
	  	
	  	
	  		
	  		A Look Inside JBoss Microcontainer
	  		Ales Justin delves into the features of JBoss Microcontainer's Virtual File System architecture. 	
	  	
	  	
	  		
	  		Scrum Adoption Strategies
	  		Danube's Michael James describes the challenges and benefits of taking a Scrum-oriented approach. 	
	  	
  



  
    Popular at DZoneAnnouncing JRebel 3.0 M1 -- The Next Generation
			IntelliJ IDEA sources available
			Hibernate Validator 4 unleashed
			Avoid common Java pitfalls
			Java Questions and Answers
			Groovy hip tip: to use or not to use setters and getters
			Combining Liquibase with Spring and JPA
			Artifactory Maven Repository Manager 2.1
			Kohsuke Kawaguchi Hudson Webinar
			Application Clustering For Scalability and High Availability
			See more popular at DZoneSubscribe to the RSS feed  

								
		
			
	Terms of Service - Privacy - &copy; 1997-2009, DZone, Inc.
	
	







 
    SyntaxHighlighter.config.bloggerMode = true;
    SyntaxHighlighter.config.taName = "pre";
    SyntaxHighlighter.config.clipboardSwf = '/sites/all/themes/dzone/scripts/syntaxHighlighter/clipboard.swf';
    SyntaxHighlighter.all();
    dp.SyntaxHighlighter.HighlightAll('code');


	
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));



var pageTracker = _gat._getTracker("UA-410289-1");
pageTracker._setDomainName(".dzone.com");
pageTracker._initData();
pageTracker._trackPageview();

 


_qoptions={
qacct:"p-ebK_XdQH1HeLo"
};







_atrk_opts = {
atrk_acct: "2Zc291a0g0y12X" }; atrk ();





JProfiler: Your Java Code Could be Running Faster in Under Two Hours | Javalobby




	
	

			
		






	
		
			
			  								
				Login
								Join DZone
											
			
				
				
				The heart of the Java developer community
			
			
								Home
Zones.NET Zone
Agile Zone
Architects Zone
Book Zone
Eclipse Zone
Groovy Zone
Javalobby
JetBrains Zone
NetBeans Zone
PHP Zone
RIA Zone
Refcardz
Ruby Zone
SOA Zone
SQL Zone
Server Zone
Web Builder Zone


Library
Refcardz
Forums
Links
Snippets

			
				
	
    
      
    ');
    //-->
    
      
        
      
      
    
    
		
		
	
	
	
		 Home						 
						
		   
		   var dzone_title = 'JProfiler: Your Java Code Could be Running Faster in Under Two Hours';
			 		   var dzone_url = 'http://java.dzone.com/articles/jprofiler-your-java-code-could';
		   		   JProfiler: Your Java Code Could be Running Faster in Under Two Hours
														
							
			
						
			
			


   
    Submitted by Zviki Cohen on Wed, 2008/07/09 - 1:25am
    
    	




        Tags: java
performance
Tools

    
  
 
        		Ads by DZone		A couple of weeks ago I found myself in a position which is well known to any professional Java developer: my software was simply too slow. After tackling some obvious pain-points, I had to turn to help of a profiler. At the end of the day, I managed to cut the execution time of some processes by 50% and more, by using JProfiler form ej-technologies. The Open Source Alternatives As an Eclipse user and a strong OSS supporter, I first started searching for the open source alternatives. In the past, I have used the Eclipse Test &amp; Performance Tools Platform, aka TPTP. However, TPTP is no longer an option for me since it does not support Mac OS X. TPTP is a good, solid, tool but it is not a simple one to install and use. Just to be clear: a simple tool would be a tool I can install and use without reading a manual. TPTP comes with a complex setup process.I searched for some other free tools. I found this list of open source Java profilers and wasted about 3-4 hours running through it. None of them worked well. Most of them were buggy, some eventually worked but did not produce enough information or produced too much information, which is just as bad. Most of the tools are focused on memory analysis, while I needed execution time analysis. I had to look elsewhere.My Experience with JProfilerI'll start from the bottom line. JProfiler is not the prettiest tool you can find. Its' integration with Eclipse leaves much to be desired. However, it has many advantages:Very simple to use, compared to tools in its' class. Provides all the information you will desire with extensive views and predefined filters to make sure you'll get just the information you need. Relatively low execution overhead with many profiling options (instrumentation, sampling, etc.) and highly configurable settings. It displays the information while the program is running, as opposed to other tools I've used, where you have to stop the analysis to get some results.  I downloaded JProfiler and installed it using the provided installer. Like other profilers, JProfiler integrates with the IDE, supporting Eclipse and IntelliJ. In Eclipse, you use the &quot;Profile&quot; command, which uses the same &quot;Launch Configurations&quot; as the &quot;Run&quot; and &quot;Debug&quot; commands. At this point, you'll be transferred to JProfiler to start the profiling session. It took me less than half an hour to start profiling (including the download and installation), without any prior knowledge of the product and without reading any documentation. It took me another half an hour to explore all the views and understand where I can start cutting execution time. About half an hour later, I was running much faster. As I wrote earlier, about 50% faster with a couple more fixes I did that day.Since then, I had a chance to use JProfiler on a number of occasions and it just works: profile, find the problem, fix and retest. I don't need any special preparation or setup: I just launch JProfiler using my existing launch configuration and a couple of minutes later I have the results. I even tried it on Windows, as well and it works exactly the same. You don't need to buy an additional license for that: you can remotely profile your application across the supported platforms (Windows, Mac, Linux, Solaris, AIX and HP-UX) without running JProfiler on the remote machine.JProfiler in ActionI'm not an expert user and my experience with JProfiler is limited. I took a few screenshots to show how simple yet powerful is JProfiler. The first screen is the Session Startup, which is the first dialog you get when you launch a new profiling session. What I like most about this window is the two lower bars that give you an estimate on how intensive this profiling session is going to be in terms of memory and CPU usage. If you change any of the profiling parameters, these bars will reflect the change. Going into the profile settings, you get an assortment of configuration options: You can choose from predefined settings or use a custom settings. Once you select an option you'll see some explanation in the dialog itself, so there's no need to start looking for documentation. Once you get the hang of it, you can start exploring the custom options, but I found the predefined settings totally sufficient for my needs.My focus was on execution time of a simple Java program, so the default option worked best for me. When analyzing my execution time, the most helpful tool was the &quot;Hot Spots&quot; view: In this view, the most expensive calls are sorted in a descending order. You can expand the call and see which methods invoked it and, for each of those methods, what was its' share in the overall performance cost. This graph is updated every 5 seconds while the program executes. You may also choose to see it as a call graph: In this graph, each method gets a color according to its' contribution to the overall performance. The more expensive the call, the darker it will be. For each method you can expand the callers and methods being invoked. This makes it a good tool for identifying the critical path. All of these views can be exported to a readable HTML format, including the graphs.&nbsp;SummaryIt is my opinion that every professional developer should know how to profile code. I don't believe profiling is an art which should be left to dedicated performance teams (my former employer took that approach), mostly because it is the combination of knowing the code and mastering the profiling technique which yields the best results. In an ideal situation, every developer should have a profiler in his or her arsenal, ready to be launched at any given time.Should you buy a profiler?  Even if TPTP works on your platform, it is still behind the commercial tools. It seems that profilers are one of the few segments in the development tools market, where open source tools are not catching up with their commercial counterparts. It is more of a question of how you value your time. You can read my related post of the subject from one year ago: When saving a buck actually costs you more. JProfiler will simply provide the results faster.From http://zvikico.typepad.com/
      Article Type:&nbsp;
    
            
                    How-to        
        


 Your rating: 
 0
 

	
		                 
                    
        He is a entrepreneur and a software architect from Tel Aviv, Israel. He is also a technology freak with about 20 years experience working with computers. He is currently working on his first private initiative in the area of software development tools. His vision is to maximize the abilities of software developers by providing pragmatic tools that enable them to get fast results.
 Zviki is a DZone MVB and is not an employee of DZone and has posted 24 posts at DZone. You can read more from them at their website.
    	

    
Login or register to post comments
19670 reads
Printer-friendly version
(Note: Opinions expressed in this article and its replies are the opinions of their respective authors and not those of DZone, Inc.)
Comments

		
			      
        
	    	Michael Bien replied on Wed, 2008/07/09 - 5:38am
  	   	
	
		   It seems like you haven't tried the NetBeans Profiler in your 3-4h evaluation of OS software ;)(or https://visualvm.dev.java.net/ which has a subset of the NB profiler features and is now included in the JDK)I have no JProfiler license so I can't compare them, but all I see from your entry would be possible with the NB profiler too - the UI even looks very similar.		       			Login or register to post comments

  				
 


		
			      
        
	    	christiaan_se replied on Wed, 2008/07/09 - 6:18am
  	   	
	
		   You should definitely check out the Netbeans profiler. I normally use Eclipse, but I think this is the feature which makes Netbeans far better than Eclipse. I've tried TPTP, but somehow they completely missed the concept of being userfriendly and providing insightful information when it comes down to performance and memory analysis. It took me quite some effort simply to get it running. With netbeans you are up and running in a couple of minutes and you have all the information you need to do some good analysis (also have a look at their getting started tutorial, very well written). Before I used Netbeans profiler, I also tried JProfiler. Also a good tool indeed and similar to NB profiler. One thing I noticed is that NB profiler can also handle profiling of memory intensive applications (which is a likely application to profile;-) I believe this is because it is based on what they call JFluid technology. And it is open source of course.		       			Login or register to post comments

  				
 


		
		  	   		 
    
        
	    	Lzszlo replied on Wed, 2008/07/09 - 7:02am
  	   	
	
		   Why is it that nothing supports Mac OS X? :)		       			Login or register to post comments

  				
 


		
			      
        
	    	Jess Holle replied on Wed, 2008/07/09 - 9:06am
  	   	
	
		   I'd concur that the NetBeans profiler is quite nice -- for use cases where it holds up.The CPU profiler has a few gaps, though:It does not support a sampling mode, only instrumentation.  This is problematic when you have a huge application wherein you want to quickly zero in on the problem with rough measurements and then instrument only the part of the application you need.  Moreover the profiler will fail if you try to instrument too many methods.  See NB issue #113276.Backtraces show self time rather than total time.  This is misleading as the UI does not label these as &quot;Self Time&quot;, despite using that label for this metric elsewhere.  It is also rather useless compared to total time.  See NB issue #110301.Finally, the VisualVM version of the CPU profiler does not allow you to instrument only parts of your application and thus has issues with large applications.The memory profiler in NB and VisualVM is more mature, but operates on a fairly detailed, low level.  Higher level capabilities like those in Eclipse Memory Analyzer Tool (http://www.eclipse.org/mat/) would be a really nice addition.  Ideally an IDE independent core would be split out of Eclipse Memory Analyzer Tool and re-used in both Eclipse and NetBeans... 		       			Login or register to post comments

  				
 


		
			      
        
	    	Jess Holle replied on Wed, 2008/07/09 - 9:55am in response to: jessh
  	   	
	
		   Finally, the VisualVM version of the CPU profiler does not allow you to instrument only parts of your application and thus has issues with large applications. I've since been informed that this shortcoming in VisualVM was addressed in Visual VM 1.0.  I had not tested this since a pre-release version and didn't realize/notice this change. 		       			Login or register to post comments

  				
 


		
			      
        
	    	Yaozong Zhu replied on Wed, 2008/07/09 - 10:54am
  	   	
	
		   I tried JProfile once with the 10-day trial licence, but I couldn't be able to set it up for maven-based project. Neither was Netbean Profile. I wonder they are only working for Ant-based projects (build.xml) or not. I totally agree with Zviki. [quote]It is my opinion that every professional developer should know how to profile code. [/quote]		       			Login or register to post comments

  				
 


		
		  	   		 
    
        
	    	Zviki Cohen replied on Wed, 2008/07/09 - 11:36am
  	   	
	
		   Does NetBean Profiler provide Eclipse integration?  :-) Seriously, you could say I'm an Eclipse fanboy, so I didn't look in that direction.  I'm working on an Eclipse plug-in, so I will need to launch my application from Eclipse and profile it from NetBeans, which is probably feasable. Still, kind of unnatural, to say the least.  Thanks for the comments. I'll check it out.&nbsp;		       			Login or register to post comments

  				
 


		
			      
        
	    	Jess Holle replied on Wed, 2008/07/09 - 11:38am
  	   	
	
		   NetBeans supports Maven now days.  That said, you can use the profiler anyway, e.g. at least from VisualVM you can use the profiler without any sources, project, or whatever.  In NetBeans you'd likely want a project just to point out your source trees, but nothing more is needed just to use the profiler.		       			Login or register to post comments

  				
 


		
		  	   		 
    
        
	    	Zviki Cohen replied on Wed, 2008/07/09 - 12:16pm
  	   	
	
		   I see there's a lot of noise around VisualVM. I didn't test it, yet, probably it has one simple requirement: a Sun JVM. Which means it's not for Mac OS X users.  BTW, on OS X we have DTrace, with the provided Apple UI, which is called Instruments. Without a doubt, this is the best UI I've seen for a profiler. It shows most of the information you get from VisualVM. I'll do my best to review it in the near future. &nbsp;		       			Login or register to post comments

  				
 


		
			      
        
	    	Jess Holle replied on Wed, 2008/07/09 - 4:55pm
  	   	
	
		   We have 2 Macs in our house...That said, I don't touch them for Java as the platform's commitment to and support of Java have seemed quite shaky for quite some time.  I noted a swing away from Mac OS X (and towards Linux, of course) at this years JavaOne that I would attribute directly to Apple's ambivalent (at best) attitude towards Java.		       			Login or register to post comments

  				
 


		
			      
        
	    	Milind Rao replied on Thu, 2008/07/10 - 12:23am
  	   	
	
		   I primarily use Eclipse for development, but use Netbeans for Matisse and Profiling.  However, I haven't been able to find the equivalent of the AppletViewer in Netbeans.  It's so much easier to debug using the AppletViewer rather than creating jars and running applets in browsers.  Profiling applets in an AppletViewer equivalent in Netbeans, would similarly be much easier.  How does one profile applets in a browser anyway?		       			Login or register to post comments

  				
 


		
		  	   		 
    
        
	    	Jaroslav Bachorik replied on Thu, 2008/07/10 - 1:37am in response to: zvikico
  	   	
	
		   VisualVM works on Mac OS X as well - check this blog post to see it in action.		       			Login or register to post comments

  				
 


		
		  	   		 
    
        
	    	Jaroslav Bachorik replied on Thu, 2008/07/10 - 1:39am in response to: os2baba
  	   	
	
		   Did you try creating the applet in NetBeans and then invoking &quot;Profile File&quot; action on it? It will start the applet in profiling mode and off you go :)Also, you can use dynamic attach (if running in JRE 6) to attach to an applet running inside a browser and profile it. 		       			Login or register to post comments

  				
 


		
			      
        
	    	Dino replied on Thu, 2008/07/10 - 8:44pm
  	   	
	
		   I spent about 1/2 hour with visualvm and the profiler doesn't work very well. Bunch of errors get generated and the server crashes. Have to wait a few more iterations before I try it out again. 		       			Login or register to post comments

  				
 


		
		  	   		 
    
        
	    	Slava Imeshev replied on Fri, 2008/07/11 - 12:35am in response to: mbien
  	   	
	
		   &nbsp;I have been using JProfiler for over 5 years. Having had experience with other commercial and free tools, I can say that JProfiler takes the cake. If you are in business of delivering fast Java applications, JProfiler is a must-have tool.&nbsp;Regards,Slava ImeshevCacheonix: Fast Clustered Java Cache &nbsp;&nbsp;&nbsp;		       			Login or register to post comments

  				
 


		
			      
        
	    	Milind Rao replied on Fri, 2008/07/11 - 1:10am in response to: yardus
  	   	
	
		   I ended up trying VisualVM.  I knew about it, but had never tried it before.  Worked like a charm.  I was able to attach to the AppletViewer I started from Eclipse and profile it.  I don't know if the Netbeans profiler has more options, but the one in VisualVM did everything I wanted.  

This is much better than using Netbeans for profiling because I have never been able to get the Eclipse Project importer to work off-the-bat for me.  The classpaths of the various projects are always screwed up and I spend a considerable amount of time setting them up again in the Netbeans projects.  Also while Netbeans has been getting really good lately, it's still far less productive because it doesn't have Eclipse's immediate compiles and the run configurations.  It's such a pain in Netbeans to have to keep setting the "main" project and then selecting the class to run instead of just clicking on the run configuration dropdown menu.		       			Login or register to post comments

  				
 


		
			      
        
	    	Michael Bien replied on Fri, 2008/07/11 - 3:54am in response to: os2baba
  	   	
	
		   [quote=os2baba]It's such a pain in Netbeans to have to keep setting the &quot;main&quot; project and then selecting the class to run instead of just clicking on the run configuration dropdown menu.

[/quote]No, NetBeans has run configurations like any other mainstream IDE too. The only exception are applets whch you can't currently confugure explicitly, which is solved in 6.5. I use them quite often.But yes you are right you are asked to choose the main project the first time you hit run and have to change it again whenever you want to run a different project. &nbsp;		       			Login or register to post comments

  				
 


		
			      
        
	    	Milind Rao replied on Fri, 2008/07/11 - 4:06am in response to: mbien
  	   	
	
		   Can you point me to some link that shows how to create different Run Configurations for different classes?  I know that I can open a class and then hit Alt-F6 to run the class.  But I don't know how to do it so I can change it's arguments, VM args etc. and have it in some list that I can directly launch without having to open the class.		       			Login or register to post comments

  				
 


		
			      
        
	    	Milind Rao replied on Fri, 2008/07/11 - 4:18am in response to: os2baba
  	   	
	
		   Never mind.  Found it.   But quite cumbersome creating the configurations compared to Eclipse.  Anyway, I don't want this to end up into an Eclipse vs Netbeans debate.  Big thanks to Michael Bien for reminding me of VisualVM.		       			Login or register to post comments

  				
 


		
			      
        
	    	Michael Bien replied on Fri, 2008/07/11 - 4:35am in response to: os2baba
  	   	
	
		   no problem ;)		       			Login or register to post comments

  				
 


		
		  	   		 
    
        
	    	Alessandro Borges replied on Wed, 2008/07/23 - 7:16am
  	   	
	
		   JProfiller is a great tool. Recent tools, like NetBeans Profilers, still lacks charts like call graph, memory walking, back trace.This is really necessary when you need to discover persistent roots of ungarbaged data. &nbsp;		       			Login or register to post comments

  				
 


		
		  	   		 
    
        
	    	m. n. replied on Thu, 2008/07/24 - 5:27pm
  	   	
	
		   To the maven/netbeans/profiler commenter:Netbeans (so far) doesn't have great support for the profiler for maven projects. Basically, the classpath doesn't get set, esp irksome is multi-projects (more than one pom). This was the case in nb6.0, maybe something changed in a recent update, but I doubt it.  Maybe nb6.5 changes something.  Frankly, though, it's the integration between the nb mvn plugin &amp; the nb platform that's the issue, not netbeans per se.   (Try it: the profiler may *look* like it's working, but compare profiling an Ant app to a Maven app, &amp; you'll see the difference)...  To profile my maven app, I created (in unix, of course) a symlink tree of all my maven multi-project sources into a single &quot;virtual&quot; src dir (there shouldn't be overlaps in files, of course!), and calculated all my dependencies to an output file (mvn dependency:build-classpath -Dmdep.outputFile=mycp.txt ), and used that as my ant classpath.  Quite a hack, but once it's done, it stays done (by re-running a shell script to update my symlinks).  -m&nbsp;		       			Login or register to post comments

  				
 


		
			      
        
	    	bphanirajkumar@... replied on Tue, 2009/07/21 - 4:29am
  	   	
	
		   Hi friends,

i would like to profile my web application application with jprofiler. I am using unix as my OS. could any of you help me as to how to configure jprofiler to run in unix.

Thanks in advance,
Phani.		       			Login or register to post comments

  				
 



  Comment viewing options

  


 Flat list - collapsedFlat list - expandedThreaded list - collapsedThreaded list - expanded


 Date - newest firstDate - oldest first


 10 comments per page30 comments per page50 comments per page70 comments per page90 comments per page150 comments per page200 comments per page250 comments per page300 comments per page


Select your preferred way to display the comments and click "Save settings" to activate your changes.




		
	
	
						
					
	

  
 Search this site: 
 







	

									
													
							
											
										
			
			
');
//-->

			
			  
			
			
		
														
  About the author

  
    First Name: ZvikiLast Name: CohenPosts: 24Joined: 03/29/2007View full user profile  



  
    Spotlight Features					  	
	  		
	  		Scrum Adoption Strategies
	  		Danube's Michael James describes the challenges and benefits of taking a Scrum-oriented approach. 	
	  	
	  	
	  		
	  		A Look Inside JBoss Microcontainer
	  		Ales Justin delves into the features of JBoss Microcontainer's Virtual File System architecture. 	
	  	
	  	
	  		
	  		Integrating Flex and Spring JMS
	  		Learn how to leverage the Spring BlazeDS project to integrate Spring based JMS
systems with Flex powered RIAs. 	
	  	
  



  
    Popular at DZoneAnnouncing JRebel 3.0 M1 -- The Next Generation
			IntelliJ IDEA sources available
			Hibernate Validator 4 unleashed
			Avoid common Java pitfalls
			Java Questions and Answers
			Groovy hip tip: to use or not to use setters and getters
			Combining Liquibase with Spring and JPA
			Artifactory Maven Repository Manager 2.1
			Kohsuke Kawaguchi Hudson Webinar
			Application Clustering For Scalability and High Availability
			See more popular at DZoneSubscribe to the RSS feed  

								
		
			
	Terms of Service - Privacy - &copy; 1997-2009, DZone, Inc.
	
	







 
    SyntaxHighlighter.config.bloggerMode = true;
    SyntaxHighlighter.config.taName = "pre";
    SyntaxHighlighter.config.clipboardSwf = '/sites/all/themes/dzone/scripts/syntaxHighlighter/clipboard.swf';
    SyntaxHighlighter.all();
    dp.SyntaxHighlighter.HighlightAll('code');


	
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));



var pageTracker = _gat._getTracker("UA-410289-1");
pageTracker._setDomainName(".dzone.com");
pageTracker._initData();
pageTracker._trackPageview();

 


_qoptions={
qacct:"p-ebK_XdQH1HeLo"
};







_atrk_opts = {
atrk_acct: "2Zc291a0g0y12X" }; atrk ();


